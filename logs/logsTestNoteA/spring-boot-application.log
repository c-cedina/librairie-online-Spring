2025-02-11T16:12:06.730+01:00  INFO 42313 --- [librairie-online] [main] c.e.l.c.NoteAControllerIntegrationTest   : Starting NoteAControllerIntegrationTest using Java 21.0.5 with PID 42313 (started by cedinacoelho in /Users/cedinacoelho/Documents/src/librairie-online-Spring)
2025-02-11T16:12:06.748+01:00  INFO 42313 --- [librairie-online] [main] c.e.l.c.NoteAControllerIntegrationTest   : The following 1 profile is active: "testNoteA"
2025-02-11T16:12:07.624+01:00  INFO 42313 --- [librairie-online] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-02-11T16:12:07.729+01:00  INFO 42313 --- [librairie-online] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 96 ms. Found 15 JPA repository interfaces.
2025-02-11T16:12:08.508+01:00  INFO 42313 --- [librairie-online] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-02-11T16:12:08.566+01:00  INFO 42313 --- [librairie-online] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2025-02-11T16:12:08.613+01:00  INFO 42313 --- [librairie-online] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-02-11T16:12:08.954+01:00  INFO 42313 --- [librairie-online] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-02-11T16:12:08.992+01:00  INFO 42313 --- [librairie-online] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-02-11T16:12:09.236+01:00  INFO 42313 --- [librairie-online] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdbNoteA user=SA
2025-02-11T16:12:09.246+01:00  INFO 42313 --- [librairie-online] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-02-11T16:12:09.273+01:00  WARN 42313 --- [librairie-online] [main] org.hibernate.orm.deprecation            : HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-02-11T16:12:10.378+01:00  INFO 42313 --- [librairie-online] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-02-11T16:12:10.392+01:00 DEBUG 42313 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Achete cascade 
2025-02-11T16:12:10.397+01:00 DEBUG 42313 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Anime cascade 
2025-02-11T16:12:10.397+01:00 DEBUG 42313 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Classe cascade 
2025-02-11T16:12:10.398+01:00 DEBUG 42313 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Client cascade 
2025-02-11T16:12:10.399+01:00 DEBUG 42313 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Directeur cascade 
2025-02-11T16:12:10.400+01:00 DEBUG 42313 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Fournisseur cascade 
2025-02-11T16:12:10.401+01:00 DEBUG 42313 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Genre cascade 
2025-02-11T16:12:10.402+01:00 DEBUG 42313 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Jwt cascade 
2025-02-11T16:12:10.403+01:00 DEBUG 42313 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Loue cascade 
2025-02-11T16:12:10.403+01:00 DEBUG 42313 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Manga cascade 
2025-02-11T16:12:10.404+01:00 DEBUG 42313 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Mangaka cascade 
2025-02-11T16:12:10.406+01:00 DEBUG 42313 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists NoteA cascade 
2025-02-11T16:12:10.407+01:00 DEBUG 42313 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists NoteM cascade 
2025-02-11T16:12:10.407+01:00 DEBUG 42313 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Role cascade 
2025-02-11T16:12:10.408+01:00 DEBUG 42313 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Studio cascade 
2025-02-11T16:12:10.409+01:00 DEBUG 42313 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Validation cascade 
2025-02-11T16:12:10.414+01:00 DEBUG 42313 --- [librairie-online] [main] org.hibernate.SQL                        : create table Achete (date date, id integer generated by default as identity, nAdherent integer, nSerie integer, prix numeric(9,2), primary key (id))
2025-02-11T16:12:10.423+01:00 DEBUG 42313 --- [librairie-online] [main] org.hibernate.SQL                        : create table Anime (date integer not null, nSerie integer generated by default as identity, nSerieM integer, nom varchar(255), nomStudio varchar(255), primary key (nSerie))
2025-02-11T16:12:10.425+01:00 DEBUG 42313 --- [librairie-online] [main] org.hibernate.SQL                        : create table Classe (nSerie integer not null, type varchar(255) not null, primary key (nSerie, type))
2025-02-11T16:12:10.427+01:00 DEBUG 42313 --- [librairie-online] [main] org.hibernate.SQL                        : create table Client (active boolean not null, age integer not null, date_adhesion date, date_naissance date, nAdherent integer generated by default as identity, roleId integer, email varchar(255), nom varchar(255), password varchar(255), prenom varchar(255), sexe varchar(255), primary key (nAdherent))
2025-02-11T16:12:10.430+01:00 DEBUG 42313 --- [librairie-online] [main] org.hibernate.SQL                        : create table Directeur (id integer generated by default as identity, roleId integer, Username varchar(255), email varchar(255), password varchar(255), primary key (id))
2025-02-11T16:12:10.432+01:00 DEBUG 42313 --- [librairie-online] [main] org.hibernate.SQL                        : create table Fournisseur (nom varchar(255) not null, ville varchar(255), primary key (nom))
2025-02-11T16:12:10.434+01:00 DEBUG 42313 --- [librairie-online] [main] org.hibernate.SQL                        : create table Genre (type varchar(255) not null, primary key (type))
2025-02-11T16:12:10.435+01:00 DEBUG 42313 --- [librairie-online] [main] org.hibernate.SQL                        : create table Jwt (desactive boolean not null, expire boolean not null, id integer generated by default as identity, nAdherent integer, token varchar(255), primary key (id))
2025-02-11T16:12:10.437+01:00 DEBUG 42313 --- [librairie-online] [main] org.hibernate.SQL                        : create table Loue (date date, dateMaximale date, dateRetour date, id integer generated by default as identity, nAdherent integer, nSerie integer, primary key (id))
2025-02-11T16:12:10.440+01:00 DEBUG 42313 --- [librairie-online] [main] org.hibernate.SQL                        : create table Manga (date_parution integer not null, nbExemplaire integer not null, nserie integer generated by default as identity, tome integer not null, nom varchar(255), nomFournisseur varchar(255), nomMangaka varchar(255), prenomMangaka varchar(255), primary key (nserie))
2025-02-11T16:12:10.442+01:00 DEBUG 42313 --- [librairie-online] [main] org.hibernate.SQL                        : create table Mangaka (nationalite varchar(255), nom varchar(255) not null, prenom varchar(255) not null, sexe varchar(255), primary key (nom, prenom))
2025-02-11T16:12:10.445+01:00 DEBUG 42313 --- [librairie-online] [main] org.hibernate.SQL                        : create table NoteA (date date, nSerie integer not null, nadherent integer not null, valeur numeric(38,2), primary key (nSerie, nadherent))
2025-02-11T16:12:10.448+01:00 DEBUG 42313 --- [librairie-online] [main] org.hibernate.SQL                        : create table NoteM (date date, nSerie integer not null, nadherent integer not null, valeur numeric(38,2), primary key (nSerie, nadherent))
2025-02-11T16:12:10.450+01:00 DEBUG 42313 --- [librairie-online] [main] org.hibernate.SQL                        : create table Role (id integer generated by default as identity, role enum ('ADMIN','USER'), primary key (id))
2025-02-11T16:12:10.453+01:00 DEBUG 42313 --- [librairie-online] [main] org.hibernate.SQL                        : create table Studio (nom varchar(255) not null, nomDirecteur varchar(255), pays varchar(255), prenomDirecteur varchar(255), primary key (nom))
2025-02-11T16:12:10.456+01:00 DEBUG 42313 --- [librairie-online] [main] org.hibernate.SQL                        : create table Validation (ClientId integer unique, code integer not null, id integer not null, Activation_instant timestamp(6) with time zone, Creation_instant timestamp(6) with time zone, Expire_instant timestamp(6) with time zone, primary key (id))
2025-02-11T16:12:10.459+01:00 DEBUG 42313 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Achete add constraint FKqb1e2gq63l9dowoni2ercv3ia foreign key (nAdherent) references Client
2025-02-11T16:12:10.471+01:00 DEBUG 42313 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Achete add constraint FKndbwyt78vyn2ixt20vveswpy foreign key (nSerie) references Manga
2025-02-11T16:12:10.475+01:00 DEBUG 42313 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Anime add constraint FKiagcnb38yakykw03xitnyt3wl foreign key (nSerieM) references Manga
2025-02-11T16:12:10.477+01:00 DEBUG 42313 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Anime add constraint FK6eecm0a8wmfpqoij85crf3m0w foreign key (nomStudio) references Studio
2025-02-11T16:12:10.480+01:00 DEBUG 42313 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Classe add constraint FKmndai52ydfxv4egnm62drgpcs foreign key (type) references Genre
2025-02-11T16:12:10.482+01:00 DEBUG 42313 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Classe add constraint FKpc3r5vfpoakf7vrwe8on06ux3 foreign key (nserie) references Manga
2025-02-11T16:12:10.485+01:00 DEBUG 42313 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Client add constraint FK4bpcqc78ucwdr2mk0mpv6dckv foreign key (roleId) references Role
2025-02-11T16:12:10.487+01:00 DEBUG 42313 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Directeur add constraint FK7f93lqs710nn5x4egfx59erpw foreign key (roleId) references Role
2025-02-11T16:12:10.490+01:00 DEBUG 42313 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Jwt add constraint FKfdnulgy4378srgo0lw1qnxn78 foreign key (nAdherent) references Client
2025-02-11T16:12:10.492+01:00 DEBUG 42313 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Loue add constraint FKk9fmioh8om4kdauf119myfy88 foreign key (nSerie) references Anime
2025-02-11T16:12:10.494+01:00 DEBUG 42313 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Loue add constraint FK7uxy40ng4oydutr0xg99abf8n foreign key (nAdherent) references Client
2025-02-11T16:12:10.497+01:00 DEBUG 42313 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Manga add constraint FK6jv3kix0ie77vrix41q74e9dp foreign key (nomFournisseur) references Fournisseur
2025-02-11T16:12:10.499+01:00 DEBUG 42313 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Manga add constraint FKoxc656tng6cku1kgsbq5t1ifb foreign key (nomMangaka, prenomMangaka) references Mangaka
2025-02-11T16:12:10.502+01:00 DEBUG 42313 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists NoteA add constraint FK4se4t04m3xv4jvhufc8nhdfnx foreign key (nSerie) references Anime
2025-02-11T16:12:10.505+01:00 DEBUG 42313 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists NoteA add constraint FK4od391ruf1aqd8e0cqkw04ic5 foreign key (nadherent) references Client
2025-02-11T16:12:10.507+01:00 DEBUG 42313 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists NoteM add constraint FK3eoqdbnmssmi133k9fdsko3d3 foreign key (nadherent) references Client
2025-02-11T16:12:10.509+01:00 DEBUG 42313 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists NoteM add constraint FKqy62n647qukdbu57egrbuerj6 foreign key (nSerie) references Manga
2025-02-11T16:12:10.512+01:00 DEBUG 42313 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Validation add constraint FK3jm2763f48u5y9wfcnhw6yd1p foreign key (ClientId) references Client
2025-02-11T16:12:10.517+01:00  INFO 42313 --- [librairie-online] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-02-11T16:12:11.060+01:00  INFO 42313 --- [librairie-online] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-02-11T16:12:11.528+01:00  INFO 42313 --- [librairie-online] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-02-11T16:12:11.528+01:00  WARN 42313 --- [librairie-online] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2025-02-11T16:12:12.475+01:00  INFO 42313 --- [librairie-online] [main] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdbNoteA'
2025-02-11T16:12:12.573+01:00  INFO 42313 --- [librairie-online] [main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-02-11T16:12:12.574+01:00  INFO 42313 --- [librairie-online] [main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-02-11T16:12:12.577+01:00  INFO 42313 --- [librairie-online] [main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 2 ms
2025-02-11T16:12:12.616+01:00  INFO 42313 --- [librairie-online] [main] c.e.l.c.NoteAControllerIntegrationTest   : Started NoteAControllerIntegrationTest in 6.309 seconds (process running for 7.426)
2025-02-11T16:12:13.318+01:00 DEBUG 42313 --- [librairie-online] [main] org.hibernate.SQL                        : select na1_0.nSerie,na1_0.nadherent,na1_0.date,na1_0.valeur from NoteA na1_0
2025-02-11T16:12:13.348+01:00 DEBUG 42313 --- [librairie-online] [main] org.hibernate.SQL                        : select c1_0.nAdherent,c1_0.active,c1_0.age,c1_0.date_adhesion,c1_0.date_naissance,c1_0.email,c1_0.nom,c1_0.password,c1_0.prenom,c1_0.roleId,c1_0.sexe from Client c1_0
2025-02-11T16:12:13.351+01:00 DEBUG 42313 --- [librairie-online] [main] org.hibernate.SQL                        : select a1_0.nSerie,a1_0.date,a1_0.nSerieM,a1_0.nom,a1_0.nomStudio from Anime a1_0
2025-02-11T16:12:13.353+01:00 DEBUG 42313 --- [librairie-online] [main] org.hibernate.SQL                        : select r1_0.id,r1_0.role from Role r1_0
2025-02-11T16:12:13.373+01:00 DEBUG 42313 --- [librairie-online] [main] org.hibernate.SQL                        : insert into Role (role,id) values (?,default)
2025-02-11T16:12:13.394+01:00 DEBUG 42313 --- [librairie-online] [main] org.hibernate.SQL                        : insert into Client (active,age,date_adhesion,date_naissance,email,nom,password,prenom,roleId,sexe,nAdherent) values (?,?,?,?,?,?,?,?,?,?,default)
2025-02-11T16:12:13.400+01:00 DEBUG 42313 --- [librairie-online] [main] org.hibernate.SQL                        : insert into Anime (date,nSerieM,nom,nomStudio,nSerie) values (?,?,?,?,default)
2025-02-11T16:12:13.495+01:00  WARN 42313 --- [librairie-online] [main] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character (',' (code 44)): expected a value]
2025-02-11T16:12:13.553+01:00  INFO 42313 --- [librairie-online] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-02-11T16:12:13.554+01:00 DEBUG 42313 --- [librairie-online] [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists Achete cascade 
2025-02-11T16:12:13.559+01:00 DEBUG 42313 --- [librairie-online] [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists Anime cascade 
2025-02-11T16:12:13.561+01:00 DEBUG 42313 --- [librairie-online] [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists Classe cascade 
2025-02-11T16:12:13.563+01:00 DEBUG 42313 --- [librairie-online] [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists Client cascade 
2025-02-11T16:12:13.566+01:00 DEBUG 42313 --- [librairie-online] [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists Directeur cascade 
2025-02-11T16:12:13.572+01:00 DEBUG 42313 --- [librairie-online] [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists Fournisseur cascade 
2025-02-11T16:12:13.574+01:00 DEBUG 42313 --- [librairie-online] [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists Genre cascade 
2025-02-11T16:12:13.576+01:00 DEBUG 42313 --- [librairie-online] [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists Jwt cascade 
2025-02-11T16:12:13.577+01:00 DEBUG 42313 --- [librairie-online] [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists Loue cascade 
2025-02-11T16:12:13.579+01:00 DEBUG 42313 --- [librairie-online] [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists Manga cascade 
2025-02-11T16:12:13.583+01:00 DEBUG 42313 --- [librairie-online] [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists Mangaka cascade 
2025-02-11T16:12:13.590+01:00 DEBUG 42313 --- [librairie-online] [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists NoteA cascade 
2025-02-11T16:12:13.592+01:00 DEBUG 42313 --- [librairie-online] [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists NoteM cascade 
2025-02-11T16:12:13.593+01:00 DEBUG 42313 --- [librairie-online] [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists Role cascade 
2025-02-11T16:12:13.595+01:00 DEBUG 42313 --- [librairie-online] [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists Studio cascade 
2025-02-11T16:12:13.596+01:00 DEBUG 42313 --- [librairie-online] [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists Validation cascade 
2025-02-11T16:12:13.604+01:00  INFO 42313 --- [librairie-online] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-02-11T16:12:13.608+01:00  INFO 42313 --- [librairie-online] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-02-11T16:12:18.297+01:00  INFO 42406 --- [librairie-online] [main] c.e.l.c.NoteAControllerIntegrationTest   : Starting NoteAControllerIntegrationTest using Java 21.0.5 with PID 42406 (started by cedinacoelho in /Users/cedinacoelho/Documents/src/librairie-online-Spring)
2025-02-11T16:12:18.299+01:00  INFO 42406 --- [librairie-online] [main] c.e.l.c.NoteAControllerIntegrationTest   : The following 1 profile is active: "testNoteA"
2025-02-11T16:12:19.258+01:00  INFO 42406 --- [librairie-online] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-02-11T16:12:19.379+01:00  INFO 42406 --- [librairie-online] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 111 ms. Found 15 JPA repository interfaces.
2025-02-11T16:12:20.362+01:00  INFO 42406 --- [librairie-online] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-02-11T16:12:20.444+01:00  INFO 42406 --- [librairie-online] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2025-02-11T16:12:20.493+01:00  INFO 42406 --- [librairie-online] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-02-11T16:12:20.845+01:00  INFO 42406 --- [librairie-online] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-02-11T16:12:20.875+01:00  INFO 42406 --- [librairie-online] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-02-11T16:12:21.097+01:00  INFO 42406 --- [librairie-online] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdbNoteA user=SA
2025-02-11T16:12:21.099+01:00  INFO 42406 --- [librairie-online] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-02-11T16:12:21.126+01:00  WARN 42406 --- [librairie-online] [main] org.hibernate.orm.deprecation            : HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-02-11T16:12:22.267+01:00  INFO 42406 --- [librairie-online] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-02-11T16:12:22.283+01:00 DEBUG 42406 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Achete cascade 
2025-02-11T16:12:22.288+01:00 DEBUG 42406 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Anime cascade 
2025-02-11T16:12:22.288+01:00 DEBUG 42406 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Classe cascade 
2025-02-11T16:12:22.289+01:00 DEBUG 42406 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Client cascade 
2025-02-11T16:12:22.289+01:00 DEBUG 42406 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Directeur cascade 
2025-02-11T16:12:22.290+01:00 DEBUG 42406 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Fournisseur cascade 
2025-02-11T16:12:22.291+01:00 DEBUG 42406 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Genre cascade 
2025-02-11T16:12:22.292+01:00 DEBUG 42406 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Jwt cascade 
2025-02-11T16:12:22.293+01:00 DEBUG 42406 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Loue cascade 
2025-02-11T16:12:22.294+01:00 DEBUG 42406 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Manga cascade 
2025-02-11T16:12:22.295+01:00 DEBUG 42406 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Mangaka cascade 
2025-02-11T16:12:22.295+01:00 DEBUG 42406 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists NoteA cascade 
2025-02-11T16:12:22.296+01:00 DEBUG 42406 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists NoteM cascade 
2025-02-11T16:12:22.297+01:00 DEBUG 42406 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Role cascade 
2025-02-11T16:12:22.297+01:00 DEBUG 42406 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Studio cascade 
2025-02-11T16:12:22.298+01:00 DEBUG 42406 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Validation cascade 
2025-02-11T16:12:22.303+01:00 DEBUG 42406 --- [librairie-online] [main] org.hibernate.SQL                        : create table Achete (date date, id integer generated by default as identity, nAdherent integer, nSerie integer, prix numeric(9,2), primary key (id))
2025-02-11T16:12:22.312+01:00 DEBUG 42406 --- [librairie-online] [main] org.hibernate.SQL                        : create table Anime (date integer not null, nSerie integer generated by default as identity, nSerieM integer, nom varchar(255), nomStudio varchar(255), primary key (nSerie))
2025-02-11T16:12:22.314+01:00 DEBUG 42406 --- [librairie-online] [main] org.hibernate.SQL                        : create table Classe (nSerie integer not null, type varchar(255) not null, primary key (nSerie, type))
2025-02-11T16:12:22.316+01:00 DEBUG 42406 --- [librairie-online] [main] org.hibernate.SQL                        : create table Client (active boolean not null, age integer not null, date_adhesion date, date_naissance date, nAdherent integer generated by default as identity, roleId integer, email varchar(255), nom varchar(255), password varchar(255), prenom varchar(255), sexe varchar(255), primary key (nAdherent))
2025-02-11T16:12:22.319+01:00 DEBUG 42406 --- [librairie-online] [main] org.hibernate.SQL                        : create table Directeur (id integer generated by default as identity, roleId integer, Username varchar(255), email varchar(255), password varchar(255), primary key (id))
2025-02-11T16:12:22.321+01:00 DEBUG 42406 --- [librairie-online] [main] org.hibernate.SQL                        : create table Fournisseur (nom varchar(255) not null, ville varchar(255), primary key (nom))
2025-02-11T16:12:22.322+01:00 DEBUG 42406 --- [librairie-online] [main] org.hibernate.SQL                        : create table Genre (type varchar(255) not null, primary key (type))
2025-02-11T16:12:22.324+01:00 DEBUG 42406 --- [librairie-online] [main] org.hibernate.SQL                        : create table Jwt (desactive boolean not null, expire boolean not null, id integer generated by default as identity, nAdherent integer, token varchar(255), primary key (id))
2025-02-11T16:12:22.325+01:00 DEBUG 42406 --- [librairie-online] [main] org.hibernate.SQL                        : create table Loue (date date, dateMaximale date, dateRetour date, id integer generated by default as identity, nAdherent integer, nSerie integer, primary key (id))
2025-02-11T16:12:22.328+01:00 DEBUG 42406 --- [librairie-online] [main] org.hibernate.SQL                        : create table Manga (date_parution integer not null, nbExemplaire integer not null, nserie integer generated by default as identity, tome integer not null, nom varchar(255), nomFournisseur varchar(255), nomMangaka varchar(255), prenomMangaka varchar(255), primary key (nserie))
2025-02-11T16:12:22.329+01:00 DEBUG 42406 --- [librairie-online] [main] org.hibernate.SQL                        : create table Mangaka (nationalite varchar(255), nom varchar(255) not null, prenom varchar(255) not null, sexe varchar(255), primary key (nom, prenom))
2025-02-11T16:12:22.331+01:00 DEBUG 42406 --- [librairie-online] [main] org.hibernate.SQL                        : create table NoteA (date date, nSerie integer not null, nadherent integer not null, valeur numeric(38,2), primary key (nSerie, nadherent))
2025-02-11T16:12:22.334+01:00 DEBUG 42406 --- [librairie-online] [main] org.hibernate.SQL                        : create table NoteM (date date, nSerie integer not null, nadherent integer not null, valeur numeric(38,2), primary key (nSerie, nadherent))
2025-02-11T16:12:22.337+01:00 DEBUG 42406 --- [librairie-online] [main] org.hibernate.SQL                        : create table Role (id integer generated by default as identity, role enum ('ADMIN','USER'), primary key (id))
2025-02-11T16:12:22.339+01:00 DEBUG 42406 --- [librairie-online] [main] org.hibernate.SQL                        : create table Studio (nom varchar(255) not null, nomDirecteur varchar(255), pays varchar(255), prenomDirecteur varchar(255), primary key (nom))
2025-02-11T16:12:22.342+01:00 DEBUG 42406 --- [librairie-online] [main] org.hibernate.SQL                        : create table Validation (ClientId integer unique, code integer not null, id integer not null, Activation_instant timestamp(6) with time zone, Creation_instant timestamp(6) with time zone, Expire_instant timestamp(6) with time zone, primary key (id))
2025-02-11T16:12:22.345+01:00 DEBUG 42406 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Achete add constraint FKqb1e2gq63l9dowoni2ercv3ia foreign key (nAdherent) references Client
2025-02-11T16:12:22.357+01:00 DEBUG 42406 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Achete add constraint FKndbwyt78vyn2ixt20vveswpy foreign key (nSerie) references Manga
2025-02-11T16:12:22.359+01:00 DEBUG 42406 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Anime add constraint FKiagcnb38yakykw03xitnyt3wl foreign key (nSerieM) references Manga
2025-02-11T16:12:22.361+01:00 DEBUG 42406 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Anime add constraint FK6eecm0a8wmfpqoij85crf3m0w foreign key (nomStudio) references Studio
2025-02-11T16:12:22.363+01:00 DEBUG 42406 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Classe add constraint FKmndai52ydfxv4egnm62drgpcs foreign key (type) references Genre
2025-02-11T16:12:22.365+01:00 DEBUG 42406 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Classe add constraint FKpc3r5vfpoakf7vrwe8on06ux3 foreign key (nserie) references Manga
2025-02-11T16:12:22.366+01:00 DEBUG 42406 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Client add constraint FK4bpcqc78ucwdr2mk0mpv6dckv foreign key (roleId) references Role
2025-02-11T16:12:22.369+01:00 DEBUG 42406 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Directeur add constraint FK7f93lqs710nn5x4egfx59erpw foreign key (roleId) references Role
2025-02-11T16:12:22.371+01:00 DEBUG 42406 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Jwt add constraint FKfdnulgy4378srgo0lw1qnxn78 foreign key (nAdherent) references Client
2025-02-11T16:12:22.373+01:00 DEBUG 42406 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Loue add constraint FKk9fmioh8om4kdauf119myfy88 foreign key (nSerie) references Anime
2025-02-11T16:12:22.375+01:00 DEBUG 42406 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Loue add constraint FK7uxy40ng4oydutr0xg99abf8n foreign key (nAdherent) references Client
2025-02-11T16:12:22.378+01:00 DEBUG 42406 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Manga add constraint FK6jv3kix0ie77vrix41q74e9dp foreign key (nomFournisseur) references Fournisseur
2025-02-11T16:12:22.380+01:00 DEBUG 42406 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Manga add constraint FKoxc656tng6cku1kgsbq5t1ifb foreign key (nomMangaka, prenomMangaka) references Mangaka
2025-02-11T16:12:22.382+01:00 DEBUG 42406 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists NoteA add constraint FK4se4t04m3xv4jvhufc8nhdfnx foreign key (nSerie) references Anime
2025-02-11T16:12:22.385+01:00 DEBUG 42406 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists NoteA add constraint FK4od391ruf1aqd8e0cqkw04ic5 foreign key (nadherent) references Client
2025-02-11T16:12:22.387+01:00 DEBUG 42406 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists NoteM add constraint FK3eoqdbnmssmi133k9fdsko3d3 foreign key (nadherent) references Client
2025-02-11T16:12:22.388+01:00 DEBUG 42406 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists NoteM add constraint FKqy62n647qukdbu57egrbuerj6 foreign key (nSerie) references Manga
2025-02-11T16:12:22.390+01:00 DEBUG 42406 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Validation add constraint FK3jm2763f48u5y9wfcnhw6yd1p foreign key (ClientId) references Client
2025-02-11T16:12:22.396+01:00  INFO 42406 --- [librairie-online] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-02-11T16:12:22.887+01:00  INFO 42406 --- [librairie-online] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-02-11T16:12:23.323+01:00  INFO 42406 --- [librairie-online] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-02-11T16:12:23.324+01:00  WARN 42406 --- [librairie-online] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2025-02-11T16:12:24.303+01:00  INFO 42406 --- [librairie-online] [main] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdbNoteA'
2025-02-11T16:12:24.398+01:00  INFO 42406 --- [librairie-online] [main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-02-11T16:12:24.398+01:00  INFO 42406 --- [librairie-online] [main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-02-11T16:12:24.401+01:00  INFO 42406 --- [librairie-online] [main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 3 ms
2025-02-11T16:12:24.438+01:00  INFO 42406 --- [librairie-online] [main] c.e.l.c.NoteAControllerIntegrationTest   : Started NoteAControllerIntegrationTest in 6.633 seconds (process running for 7.932)
2025-02-11T16:12:25.275+01:00 DEBUG 42406 --- [librairie-online] [main] org.hibernate.SQL                        : select na1_0.nSerie,na1_0.nadherent,na1_0.date,na1_0.valeur from NoteA na1_0
2025-02-11T16:12:25.314+01:00 DEBUG 42406 --- [librairie-online] [main] org.hibernate.SQL                        : select c1_0.nAdherent,c1_0.active,c1_0.age,c1_0.date_adhesion,c1_0.date_naissance,c1_0.email,c1_0.nom,c1_0.password,c1_0.prenom,c1_0.roleId,c1_0.sexe from Client c1_0
2025-02-11T16:12:25.318+01:00 DEBUG 42406 --- [librairie-online] [main] org.hibernate.SQL                        : select a1_0.nSerie,a1_0.date,a1_0.nSerieM,a1_0.nom,a1_0.nomStudio from Anime a1_0
2025-02-11T16:12:25.323+01:00 DEBUG 42406 --- [librairie-online] [main] org.hibernate.SQL                        : select r1_0.id,r1_0.role from Role r1_0
2025-02-11T16:12:25.354+01:00 DEBUG 42406 --- [librairie-online] [main] org.hibernate.SQL                        : insert into Role (role,id) values (?,default)
2025-02-11T16:12:25.390+01:00 DEBUG 42406 --- [librairie-online] [main] org.hibernate.SQL                        : insert into Client (active,age,date_adhesion,date_naissance,email,nom,password,prenom,roleId,sexe,nAdherent) values (?,?,?,?,?,?,?,?,?,?,default)
2025-02-11T16:12:25.396+01:00 DEBUG 42406 --- [librairie-online] [main] org.hibernate.SQL                        : insert into Anime (date,nSerieM,nom,nomStudio,nSerie) values (?,?,?,?,default)
2025-02-11T16:12:25.517+01:00  WARN 42406 --- [librairie-online] [main] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character (',' (code 44)): expected a value]
2025-02-11T16:12:25.590+01:00  INFO 42406 --- [librairie-online] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-02-11T16:12:25.592+01:00 DEBUG 42406 --- [librairie-online] [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists Achete cascade 
2025-02-11T16:12:25.595+01:00 DEBUG 42406 --- [librairie-online] [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists Anime cascade 
2025-02-11T16:12:25.599+01:00 DEBUG 42406 --- [librairie-online] [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists Classe cascade 
2025-02-11T16:12:25.602+01:00 DEBUG 42406 --- [librairie-online] [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists Client cascade 
2025-02-11T16:12:25.606+01:00 DEBUG 42406 --- [librairie-online] [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists Directeur cascade 
2025-02-11T16:12:25.608+01:00 DEBUG 42406 --- [librairie-online] [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists Fournisseur cascade 
2025-02-11T16:12:25.610+01:00 DEBUG 42406 --- [librairie-online] [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists Genre cascade 
2025-02-11T16:12:25.613+01:00 DEBUG 42406 --- [librairie-online] [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists Jwt cascade 
2025-02-11T16:12:25.615+01:00 DEBUG 42406 --- [librairie-online] [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists Loue cascade 
2025-02-11T16:12:25.617+01:00 DEBUG 42406 --- [librairie-online] [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists Manga cascade 
2025-02-11T16:12:25.621+01:00 DEBUG 42406 --- [librairie-online] [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists Mangaka cascade 
2025-02-11T16:12:25.623+01:00 DEBUG 42406 --- [librairie-online] [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists NoteA cascade 
2025-02-11T16:12:25.626+01:00 DEBUG 42406 --- [librairie-online] [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists NoteM cascade 
2025-02-11T16:12:25.630+01:00 DEBUG 42406 --- [librairie-online] [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists Role cascade 
2025-02-11T16:12:25.632+01:00 DEBUG 42406 --- [librairie-online] [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists Studio cascade 
2025-02-11T16:12:25.633+01:00 DEBUG 42406 --- [librairie-online] [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists Validation cascade 
2025-02-11T16:12:25.639+01:00  INFO 42406 --- [librairie-online] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-02-11T16:12:25.643+01:00  INFO 42406 --- [librairie-online] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-02-11T16:12:46.799+01:00  INFO 42568 --- [librairie-online] [main] c.e.l.c.NoteAControllerIntegrationTest   : Starting NoteAControllerIntegrationTest using Java 21.0.5 with PID 42568 (started by cedinacoelho in /Users/cedinacoelho/Documents/src/librairie-online-Spring)
2025-02-11T16:12:46.802+01:00  INFO 42568 --- [librairie-online] [main] c.e.l.c.NoteAControllerIntegrationTest   : The following 1 profile is active: "testNoteA"
2025-02-11T16:12:47.611+01:00  INFO 42568 --- [librairie-online] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-02-11T16:12:47.731+01:00  INFO 42568 --- [librairie-online] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 109 ms. Found 15 JPA repository interfaces.
2025-02-11T16:12:48.416+01:00  INFO 42568 --- [librairie-online] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-02-11T16:12:48.475+01:00  INFO 42568 --- [librairie-online] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2025-02-11T16:12:48.520+01:00  INFO 42568 --- [librairie-online] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-02-11T16:12:48.826+01:00  INFO 42568 --- [librairie-online] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-02-11T16:12:48.854+01:00  INFO 42568 --- [librairie-online] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-02-11T16:12:49.125+01:00  INFO 42568 --- [librairie-online] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdbNoteA user=SA
2025-02-11T16:12:49.127+01:00  INFO 42568 --- [librairie-online] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-02-11T16:12:49.158+01:00  WARN 42568 --- [librairie-online] [main] org.hibernate.orm.deprecation            : HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-02-11T16:12:50.311+01:00  INFO 42568 --- [librairie-online] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-02-11T16:12:50.325+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Achete cascade 
2025-02-11T16:12:50.330+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Anime cascade 
2025-02-11T16:12:50.330+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Classe cascade 
2025-02-11T16:12:50.330+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Client cascade 
2025-02-11T16:12:50.331+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Directeur cascade 
2025-02-11T16:12:50.332+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Fournisseur cascade 
2025-02-11T16:12:50.333+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Genre cascade 
2025-02-11T16:12:50.334+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Jwt cascade 
2025-02-11T16:12:50.335+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Loue cascade 
2025-02-11T16:12:50.336+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Manga cascade 
2025-02-11T16:12:50.336+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Mangaka cascade 
2025-02-11T16:12:50.337+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists NoteA cascade 
2025-02-11T16:12:50.338+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists NoteM cascade 
2025-02-11T16:12:50.338+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Role cascade 
2025-02-11T16:12:50.339+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Studio cascade 
2025-02-11T16:12:50.340+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Validation cascade 
2025-02-11T16:12:50.345+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : create table Achete (date date, id integer generated by default as identity, nAdherent integer, nSerie integer, prix numeric(9,2), primary key (id))
2025-02-11T16:12:50.353+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : create table Anime (date integer not null, nSerie integer generated by default as identity, nSerieM integer, nom varchar(255), nomStudio varchar(255), primary key (nSerie))
2025-02-11T16:12:50.355+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : create table Classe (nSerie integer not null, type varchar(255) not null, primary key (nSerie, type))
2025-02-11T16:12:50.358+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : create table Client (active boolean not null, age integer not null, date_adhesion date, date_naissance date, nAdherent integer generated by default as identity, roleId integer, email varchar(255), nom varchar(255), password varchar(255), prenom varchar(255), sexe varchar(255), primary key (nAdherent))
2025-02-11T16:12:50.360+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : create table Directeur (id integer generated by default as identity, roleId integer, Username varchar(255), email varchar(255), password varchar(255), primary key (id))
2025-02-11T16:12:50.361+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : create table Fournisseur (nom varchar(255) not null, ville varchar(255), primary key (nom))
2025-02-11T16:12:50.363+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : create table Genre (type varchar(255) not null, primary key (type))
2025-02-11T16:12:50.366+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : create table Jwt (desactive boolean not null, expire boolean not null, id integer generated by default as identity, nAdherent integer, token varchar(255), primary key (id))
2025-02-11T16:12:50.368+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : create table Loue (date date, dateMaximale date, dateRetour date, id integer generated by default as identity, nAdherent integer, nSerie integer, primary key (id))
2025-02-11T16:12:50.369+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : create table Manga (date_parution integer not null, nbExemplaire integer not null, nserie integer generated by default as identity, tome integer not null, nom varchar(255), nomFournisseur varchar(255), nomMangaka varchar(255), prenomMangaka varchar(255), primary key (nserie))
2025-02-11T16:12:50.371+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : create table Mangaka (nationalite varchar(255), nom varchar(255) not null, prenom varchar(255) not null, sexe varchar(255), primary key (nom, prenom))
2025-02-11T16:12:50.374+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : create table NoteA (date date, nSerie integer not null, nadherent integer not null, valeur numeric(38,2), primary key (nSerie, nadherent))
2025-02-11T16:12:50.377+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : create table NoteM (date date, nSerie integer not null, nadherent integer not null, valeur numeric(38,2), primary key (nSerie, nadherent))
2025-02-11T16:12:50.380+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : create table Role (id integer generated by default as identity, role enum ('ADMIN','USER'), primary key (id))
2025-02-11T16:12:50.382+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : create table Studio (nom varchar(255) not null, nomDirecteur varchar(255), pays varchar(255), prenomDirecteur varchar(255), primary key (nom))
2025-02-11T16:12:50.385+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : create table Validation (ClientId integer unique, code integer not null, id integer not null, Activation_instant timestamp(6) with time zone, Creation_instant timestamp(6) with time zone, Expire_instant timestamp(6) with time zone, primary key (id))
2025-02-11T16:12:50.389+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Achete add constraint FKqb1e2gq63l9dowoni2ercv3ia foreign key (nAdherent) references Client
2025-02-11T16:12:50.403+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Achete add constraint FKndbwyt78vyn2ixt20vveswpy foreign key (nSerie) references Manga
2025-02-11T16:12:50.405+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Anime add constraint FKiagcnb38yakykw03xitnyt3wl foreign key (nSerieM) references Manga
2025-02-11T16:12:50.408+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Anime add constraint FK6eecm0a8wmfpqoij85crf3m0w foreign key (nomStudio) references Studio
2025-02-11T16:12:50.411+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Classe add constraint FKmndai52ydfxv4egnm62drgpcs foreign key (type) references Genre
2025-02-11T16:12:50.413+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Classe add constraint FKpc3r5vfpoakf7vrwe8on06ux3 foreign key (nserie) references Manga
2025-02-11T16:12:50.415+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Client add constraint FK4bpcqc78ucwdr2mk0mpv6dckv foreign key (roleId) references Role
2025-02-11T16:12:50.417+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Directeur add constraint FK7f93lqs710nn5x4egfx59erpw foreign key (roleId) references Role
2025-02-11T16:12:50.419+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Jwt add constraint FKfdnulgy4378srgo0lw1qnxn78 foreign key (nAdherent) references Client
2025-02-11T16:12:50.421+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Loue add constraint FKk9fmioh8om4kdauf119myfy88 foreign key (nSerie) references Anime
2025-02-11T16:12:50.423+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Loue add constraint FK7uxy40ng4oydutr0xg99abf8n foreign key (nAdherent) references Client
2025-02-11T16:12:50.425+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Manga add constraint FK6jv3kix0ie77vrix41q74e9dp foreign key (nomFournisseur) references Fournisseur
2025-02-11T16:12:50.427+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Manga add constraint FKoxc656tng6cku1kgsbq5t1ifb foreign key (nomMangaka, prenomMangaka) references Mangaka
2025-02-11T16:12:50.429+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists NoteA add constraint FK4se4t04m3xv4jvhufc8nhdfnx foreign key (nSerie) references Anime
2025-02-11T16:12:50.432+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists NoteA add constraint FK4od391ruf1aqd8e0cqkw04ic5 foreign key (nadherent) references Client
2025-02-11T16:12:50.434+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists NoteM add constraint FK3eoqdbnmssmi133k9fdsko3d3 foreign key (nadherent) references Client
2025-02-11T16:12:50.436+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists NoteM add constraint FKqy62n647qukdbu57egrbuerj6 foreign key (nSerie) references Manga
2025-02-11T16:12:50.438+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Validation add constraint FK3jm2763f48u5y9wfcnhw6yd1p foreign key (ClientId) references Client
2025-02-11T16:12:50.447+01:00  INFO 42568 --- [librairie-online] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-02-11T16:12:50.990+01:00  INFO 42568 --- [librairie-online] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-02-11T16:12:51.453+01:00  INFO 42568 --- [librairie-online] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-02-11T16:12:51.453+01:00  WARN 42568 --- [librairie-online] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2025-02-11T16:12:52.398+01:00  INFO 42568 --- [librairie-online] [main] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdbNoteA'
2025-02-11T16:12:52.505+01:00  INFO 42568 --- [librairie-online] [main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-02-11T16:12:52.505+01:00  INFO 42568 --- [librairie-online] [main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-02-11T16:12:52.509+01:00  INFO 42568 --- [librairie-online] [main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 4 ms
2025-02-11T16:12:52.545+01:00  INFO 42568 --- [librairie-online] [main] c.e.l.c.NoteAControllerIntegrationTest   : Started NoteAControllerIntegrationTest in 6.181 seconds (process running for 7.288)
2025-02-11T16:12:53.247+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : select na1_0.nSerie,na1_0.nadherent,na1_0.date,na1_0.valeur from NoteA na1_0
2025-02-11T16:12:53.274+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : select c1_0.nAdherent,c1_0.active,c1_0.age,c1_0.date_adhesion,c1_0.date_naissance,c1_0.email,c1_0.nom,c1_0.password,c1_0.prenom,c1_0.roleId,c1_0.sexe from Client c1_0
2025-02-11T16:12:53.277+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : select a1_0.nSerie,a1_0.date,a1_0.nSerieM,a1_0.nom,a1_0.nomStudio from Anime a1_0
2025-02-11T16:12:53.280+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : select r1_0.id,r1_0.role from Role r1_0
2025-02-11T16:12:53.309+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : insert into Role (role,id) values (?,default)
2025-02-11T16:12:53.333+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : insert into Client (active,age,date_adhesion,date_naissance,email,nom,password,prenom,roleId,sexe,nAdherent) values (?,?,?,?,?,?,?,?,?,?,default)
2025-02-11T16:12:53.339+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : insert into Anime (date,nSerieM,nom,nomStudio,nSerie) values (?,?,?,?,default)
2025-02-11T16:12:53.359+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : select na1_0.nSerie,na1_0.nadherent,a1_0.nSerie,a1_0.date,m1_0.nserie,m1_0.date_parution,f1_0.nom,f1_0.ville,m2_0.nom,m2_0.prenom,m2_0.nationalite,m2_0.sexe,m1_0.nbExemplaire,m1_0.nom,m1_0.tome,a1_0.nom,s1_0.nom,s1_0.nomDirecteur,s1_0.pays,s1_0.prenomDirecteur,c1_0.nAdherent,c1_0.active,c1_0.age,c1_0.date_adhesion,c1_0.date_naissance,c1_0.email,c1_0.nom,c1_0.password,c1_0.prenom,r1_0.id,r1_0.role,c1_0.sexe,na1_0.date,na1_0.valeur from NoteA na1_0 left join Anime a1_0 on a1_0.nSerie=na1_0.nSerie left join Manga m1_0 on m1_0.nserie=a1_0.nSerieM left join Fournisseur f1_0 on f1_0.nom=m1_0.nomFournisseur left join Mangaka m2_0 on m2_0.nom=m1_0.nomMangaka and m2_0.prenom=m1_0.prenomMangaka left join Studio s1_0 on s1_0.nom=a1_0.nomStudio left join Client c1_0 on c1_0.nAdherent=na1_0.nadherent left join Role r1_0 on r1_0.id=c1_0.roleId where (na1_0.nSerie,na1_0.nadherent) in ((?,?))
2025-02-11T16:12:53.370+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : insert into NoteA (date,valeur,nSerie,nadherent) values (?,?,?,?)
2025-02-11T16:12:53.418+01:00  INFO 42568 --- [librairie-online] [main] c.e.l.service.NoteAService               : Recherche d'une note avec l'ID: com.example.librairie_online.entity.NoteA$NoteAId@3e1
2025-02-11T16:12:53.423+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : select na1_0.nSerie,na1_0.nadherent,a1_0.nSerie,a1_0.date,m1_0.nserie,m1_0.date_parution,f1_0.nom,f1_0.ville,m2_0.nom,m2_0.prenom,m2_0.nationalite,m2_0.sexe,m1_0.nbExemplaire,m1_0.nom,m1_0.tome,a1_0.nom,s1_0.nom,s1_0.nomDirecteur,s1_0.pays,s1_0.prenomDirecteur,c1_0.nAdherent,c1_0.active,c1_0.age,c1_0.date_adhesion,c1_0.date_naissance,c1_0.email,c1_0.nom,c1_0.password,c1_0.prenom,r1_0.id,r1_0.role,c1_0.sexe,na1_0.date,na1_0.valeur from NoteA na1_0 left join Anime a1_0 on a1_0.nSerie=na1_0.nSerie left join Manga m1_0 on m1_0.nserie=a1_0.nSerieM left join Fournisseur f1_0 on f1_0.nom=m1_0.nomFournisseur left join Mangaka m2_0 on m2_0.nom=m1_0.nomMangaka and m2_0.prenom=m1_0.prenomMangaka left join Studio s1_0 on s1_0.nom=a1_0.nomStudio left join Client c1_0 on c1_0.nAdherent=na1_0.nadherent left join Role r1_0 on r1_0.id=c1_0.roleId where (na1_0.nSerie,na1_0.nadherent) in ((?,?))
2025-02-11T16:12:53.431+01:00  INFO 42568 --- [librairie-online] [main] c.e.l.service.NoteAService               : Note trouvée: com.example.librairie_online.entity.NoteA@3f06c9ac
2025-02-11T16:12:53.432+01:00  INFO 42568 --- [librairie-online] [main] c.e.l.service.NoteAService               : Suppression de la note avec l'ID: com.example.librairie_online.entity.NoteA$NoteAId@3e1
2025-02-11T16:12:53.463+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : select count(*) from NoteA na1_0 where na1_0.nadherent=? and na1_0.nSerie=?
2025-02-11T16:12:53.469+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : select na1_0.nSerie,na1_0.nadherent,a1_0.nSerie,a1_0.date,m1_0.nserie,m1_0.date_parution,f1_0.nom,f1_0.ville,m2_0.nom,m2_0.prenom,m2_0.nationalite,m2_0.sexe,m1_0.nbExemplaire,m1_0.nom,m1_0.tome,a1_0.nom,s1_0.nom,s1_0.nomDirecteur,s1_0.pays,s1_0.prenomDirecteur,c1_0.nAdherent,c1_0.active,c1_0.age,c1_0.date_adhesion,c1_0.date_naissance,c1_0.email,c1_0.nom,c1_0.password,c1_0.prenom,r1_0.id,r1_0.role,c1_0.sexe,na1_0.date,na1_0.valeur from NoteA na1_0 left join Anime a1_0 on a1_0.nSerie=na1_0.nSerie left join Manga m1_0 on m1_0.nserie=a1_0.nSerieM left join Fournisseur f1_0 on f1_0.nom=m1_0.nomFournisseur left join Mangaka m2_0 on m2_0.nom=m1_0.nomMangaka and m2_0.prenom=m1_0.prenomMangaka left join Studio s1_0 on s1_0.nom=a1_0.nomStudio left join Client c1_0 on c1_0.nAdherent=na1_0.nadherent left join Role r1_0 on r1_0.id=c1_0.roleId where (na1_0.nSerie,na1_0.nadherent) in ((?,?))
2025-02-11T16:12:53.478+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : delete from NoteA where nSerie=? and nadherent=?
2025-02-11T16:12:53.480+01:00  INFO 42568 --- [librairie-online] [main] c.e.l.service.NoteAService               : Note supprimée avec succès.
2025-02-11T16:12:53.510+01:00  INFO 42568 --- [librairie-online] [main] c.e.l.service.NoteAService               : Recherche d'une note avec l'ID: com.example.librairie_online.entity.NoteA$NoteAId@3e1
2025-02-11T16:12:53.511+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : select na1_0.nSerie,na1_0.nadherent,a1_0.nSerie,a1_0.date,m1_0.nserie,m1_0.date_parution,f1_0.nom,f1_0.ville,m2_0.nom,m2_0.prenom,m2_0.nationalite,m2_0.sexe,m1_0.nbExemplaire,m1_0.nom,m1_0.tome,a1_0.nom,s1_0.nom,s1_0.nomDirecteur,s1_0.pays,s1_0.prenomDirecteur,c1_0.nAdherent,c1_0.active,c1_0.age,c1_0.date_adhesion,c1_0.date_naissance,c1_0.email,c1_0.nom,c1_0.password,c1_0.prenom,r1_0.id,r1_0.role,c1_0.sexe,na1_0.date,na1_0.valeur from NoteA na1_0 left join Anime a1_0 on a1_0.nSerie=na1_0.nSerie left join Manga m1_0 on m1_0.nserie=a1_0.nSerieM left join Fournisseur f1_0 on f1_0.nom=m1_0.nomFournisseur left join Mangaka m2_0 on m2_0.nom=m1_0.nomMangaka and m2_0.prenom=m1_0.prenomMangaka left join Studio s1_0 on s1_0.nom=a1_0.nomStudio left join Client c1_0 on c1_0.nAdherent=na1_0.nadherent left join Role r1_0 on r1_0.id=c1_0.roleId where (na1_0.nSerie,na1_0.nadherent) in ((?,?))
2025-02-11T16:12:53.512+01:00  WARN 42568 --- [librairie-online] [main] c.e.l.service.NoteAService               : Aucune note trouvée avec l'ID: com.example.librairie_online.entity.NoteA$NoteAId@3e1
2025-02-11T16:12:53.556+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : select na1_0.nSerie,na1_0.nadherent,na1_0.date,na1_0.valeur from NoteA na1_0
2025-02-11T16:12:53.561+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : select c1_0.nAdherent,c1_0.active,c1_0.age,c1_0.date_adhesion,c1_0.date_naissance,c1_0.email,c1_0.nom,c1_0.password,c1_0.prenom,c1_0.roleId,c1_0.sexe from Client c1_0
2025-02-11T16:12:53.562+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : select r1_0.id,r1_0.role from Role r1_0 where r1_0.id=?
2025-02-11T16:12:53.565+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : delete from Client where nAdherent=?
2025-02-11T16:12:53.568+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : select a1_0.nSerie,a1_0.date,a1_0.nSerieM,a1_0.nom,a1_0.nomStudio from Anime a1_0
2025-02-11T16:12:53.570+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : delete from Anime where nSerie=?
2025-02-11T16:12:53.576+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : select r1_0.id,r1_0.role from Role r1_0
2025-02-11T16:12:53.579+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : delete from Role where id=?
2025-02-11T16:12:53.582+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : insert into Role (role,id) values (?,default)
2025-02-11T16:12:53.586+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : insert into Client (active,age,date_adhesion,date_naissance,email,nom,password,prenom,roleId,sexe,nAdherent) values (?,?,?,?,?,?,?,?,?,?,default)
2025-02-11T16:12:53.588+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : insert into Anime (date,nSerieM,nom,nomStudio,nSerie) values (?,?,?,?,default)
2025-02-11T16:12:53.592+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : select na1_0.nSerie,na1_0.nadherent,a1_0.nSerie,a1_0.date,m1_0.nserie,m1_0.date_parution,f1_0.nom,f1_0.ville,m2_0.nom,m2_0.prenom,m2_0.nationalite,m2_0.sexe,m1_0.nbExemplaire,m1_0.nom,m1_0.tome,a1_0.nom,s1_0.nom,s1_0.nomDirecteur,s1_0.pays,s1_0.prenomDirecteur,c1_0.nAdherent,c1_0.active,c1_0.age,c1_0.date_adhesion,c1_0.date_naissance,c1_0.email,c1_0.nom,c1_0.password,c1_0.prenom,r1_0.id,r1_0.role,c1_0.sexe,na1_0.date,na1_0.valeur from NoteA na1_0 left join Anime a1_0 on a1_0.nSerie=na1_0.nSerie left join Manga m1_0 on m1_0.nserie=a1_0.nSerieM left join Fournisseur f1_0 on f1_0.nom=m1_0.nomFournisseur left join Mangaka m2_0 on m2_0.nom=m1_0.nomMangaka and m2_0.prenom=m1_0.prenomMangaka left join Studio s1_0 on s1_0.nom=a1_0.nomStudio left join Client c1_0 on c1_0.nAdherent=na1_0.nadherent left join Role r1_0 on r1_0.id=c1_0.roleId where (na1_0.nSerie,na1_0.nadherent) in ((?,?))
2025-02-11T16:12:53.596+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : insert into NoteA (date,valeur,nSerie,nadherent) values (?,?,?,?)
2025-02-11T16:12:53.600+01:00  INFO 42568 --- [librairie-online] [main] c.e.l.service.NoteAService               : Récupération de toutes les notes.
2025-02-11T16:12:53.606+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : select na1_0.nSerie,na1_0.nadherent,na1_0.date,na1_0.valeur from NoteA na1_0
2025-02-11T16:12:53.608+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : select a1_0.nSerie,a1_0.date,m1_0.nserie,m1_0.date_parution,f1_0.nom,f1_0.ville,m2_0.nom,m2_0.prenom,m2_0.nationalite,m2_0.sexe,m1_0.nbExemplaire,m1_0.nom,m1_0.tome,a1_0.nom,s1_0.nom,s1_0.nomDirecteur,s1_0.pays,s1_0.prenomDirecteur from Anime a1_0 left join Manga m1_0 on m1_0.nserie=a1_0.nSerieM left join Fournisseur f1_0 on f1_0.nom=m1_0.nomFournisseur left join Mangaka m2_0 on m2_0.nom=m1_0.nomMangaka and m2_0.prenom=m1_0.prenomMangaka left join Studio s1_0 on s1_0.nom=a1_0.nomStudio where a1_0.nSerie=?
2025-02-11T16:12:53.611+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : select c1_0.nAdherent,c1_0.active,c1_0.age,c1_0.date_adhesion,c1_0.date_naissance,c1_0.email,c1_0.nom,c1_0.password,c1_0.prenom,r1_0.id,r1_0.role,c1_0.sexe from Client c1_0 left join Role r1_0 on r1_0.id=c1_0.roleId where c1_0.nAdherent=?
2025-02-11T16:12:53.615+01:00  INFO 42568 --- [librairie-online] [main] c.e.l.service.NoteAService               : Nombre total de notes récupérées: 1
2025-02-11T16:12:53.702+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : select na1_0.nSerie,na1_0.nadherent,na1_0.date,na1_0.valeur from NoteA na1_0
2025-02-11T16:12:53.704+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : select a1_0.nSerie,a1_0.date,m1_0.nserie,m1_0.date_parution,f1_0.nom,f1_0.ville,m2_0.nom,m2_0.prenom,m2_0.nationalite,m2_0.sexe,m1_0.nbExemplaire,m1_0.nom,m1_0.tome,a1_0.nom,s1_0.nom,s1_0.nomDirecteur,s1_0.pays,s1_0.prenomDirecteur from Anime a1_0 left join Manga m1_0 on m1_0.nserie=a1_0.nSerieM left join Fournisseur f1_0 on f1_0.nom=m1_0.nomFournisseur left join Mangaka m2_0 on m2_0.nom=m1_0.nomMangaka and m2_0.prenom=m1_0.prenomMangaka left join Studio s1_0 on s1_0.nom=a1_0.nomStudio where a1_0.nSerie=?
2025-02-11T16:12:53.705+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : select c1_0.nAdherent,c1_0.active,c1_0.age,c1_0.date_adhesion,c1_0.date_naissance,c1_0.email,c1_0.nom,c1_0.password,c1_0.prenom,r1_0.id,r1_0.role,c1_0.sexe from Client c1_0 left join Role r1_0 on r1_0.id=c1_0.roleId where c1_0.nAdherent=?
2025-02-11T16:12:53.708+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : delete from NoteA where nSerie=? and nadherent=?
2025-02-11T16:12:53.712+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : select c1_0.nAdherent,c1_0.active,c1_0.age,c1_0.date_adhesion,c1_0.date_naissance,c1_0.email,c1_0.nom,c1_0.password,c1_0.prenom,c1_0.roleId,c1_0.sexe from Client c1_0
2025-02-11T16:12:53.713+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : select r1_0.id,r1_0.role from Role r1_0 where r1_0.id=?
2025-02-11T16:12:53.716+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : delete from Client where nAdherent=?
2025-02-11T16:12:53.719+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : select a1_0.nSerie,a1_0.date,a1_0.nSerieM,a1_0.nom,a1_0.nomStudio from Anime a1_0
2025-02-11T16:12:53.721+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : delete from Anime where nSerie=?
2025-02-11T16:12:53.725+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : select r1_0.id,r1_0.role from Role r1_0
2025-02-11T16:12:53.726+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : delete from Role where id=?
2025-02-11T16:12:53.729+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : insert into Role (role,id) values (?,default)
2025-02-11T16:12:53.734+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : insert into Client (active,age,date_adhesion,date_naissance,email,nom,password,prenom,roleId,sexe,nAdherent) values (?,?,?,?,?,?,?,?,?,?,default)
2025-02-11T16:12:53.738+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : insert into Anime (date,nSerieM,nom,nomStudio,nSerie) values (?,?,?,?,default)
2025-02-11T16:12:53.742+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : select na1_0.nSerie,na1_0.nadherent,a1_0.nSerie,a1_0.date,m1_0.nserie,m1_0.date_parution,f1_0.nom,f1_0.ville,m2_0.nom,m2_0.prenom,m2_0.nationalite,m2_0.sexe,m1_0.nbExemplaire,m1_0.nom,m1_0.tome,a1_0.nom,s1_0.nom,s1_0.nomDirecteur,s1_0.pays,s1_0.prenomDirecteur,c1_0.nAdherent,c1_0.active,c1_0.age,c1_0.date_adhesion,c1_0.date_naissance,c1_0.email,c1_0.nom,c1_0.password,c1_0.prenom,r1_0.id,r1_0.role,c1_0.sexe,na1_0.date,na1_0.valeur from NoteA na1_0 left join Anime a1_0 on a1_0.nSerie=na1_0.nSerie left join Manga m1_0 on m1_0.nserie=a1_0.nSerieM left join Fournisseur f1_0 on f1_0.nom=m1_0.nomFournisseur left join Mangaka m2_0 on m2_0.nom=m1_0.nomMangaka and m2_0.prenom=m1_0.prenomMangaka left join Studio s1_0 on s1_0.nom=a1_0.nomStudio left join Client c1_0 on c1_0.nAdherent=na1_0.nadherent left join Role r1_0 on r1_0.id=c1_0.roleId where (na1_0.nSerie,na1_0.nadherent) in ((?,?))
2025-02-11T16:12:53.746+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : insert into NoteA (date,valeur,nSerie,nadherent) values (?,?,?,?)
2025-02-11T16:12:53.796+01:00  INFO 42568 --- [librairie-online] [main] c.e.l.service.NoteAService               : Recherche d'une note avec l'ID: com.example.librairie_online.entity.NoteA$NoteAId@421
2025-02-11T16:12:53.797+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : select na1_0.nSerie,na1_0.nadherent,a1_0.nSerie,a1_0.date,m1_0.nserie,m1_0.date_parution,f1_0.nom,f1_0.ville,m2_0.nom,m2_0.prenom,m2_0.nationalite,m2_0.sexe,m1_0.nbExemplaire,m1_0.nom,m1_0.tome,a1_0.nom,s1_0.nom,s1_0.nomDirecteur,s1_0.pays,s1_0.prenomDirecteur,c1_0.nAdherent,c1_0.active,c1_0.age,c1_0.date_adhesion,c1_0.date_naissance,c1_0.email,c1_0.nom,c1_0.password,c1_0.prenom,r1_0.id,r1_0.role,c1_0.sexe,na1_0.date,na1_0.valeur from NoteA na1_0 left join Anime a1_0 on a1_0.nSerie=na1_0.nSerie left join Manga m1_0 on m1_0.nserie=a1_0.nSerieM left join Fournisseur f1_0 on f1_0.nom=m1_0.nomFournisseur left join Mangaka m2_0 on m2_0.nom=m1_0.nomMangaka and m2_0.prenom=m1_0.prenomMangaka left join Studio s1_0 on s1_0.nom=a1_0.nomStudio left join Client c1_0 on c1_0.nAdherent=na1_0.nadherent left join Role r1_0 on r1_0.id=c1_0.roleId where (na1_0.nSerie,na1_0.nadherent) in ((?,?))
2025-02-11T16:12:53.800+01:00  INFO 42568 --- [librairie-online] [main] c.e.l.service.NoteAService               : Note trouvée: com.example.librairie_online.entity.NoteA@66cdde2b
2025-02-11T16:12:53.800+01:00  INFO 42568 --- [librairie-online] [main] c.e.l.service.NoteAService               : Mise à jour de la note avec l'ID: com.example.librairie_online.entity.NoteA$NoteAId@421
2025-02-11T16:12:53.800+01:00  INFO 42568 --- [librairie-online] [main] c.e.l.service.NoteAService               : Recherche d'une note avec l'ID: com.example.librairie_online.entity.NoteA$NoteAId@421
2025-02-11T16:12:53.801+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : select na1_0.nSerie,na1_0.nadherent,a1_0.nSerie,a1_0.date,m1_0.nserie,m1_0.date_parution,f1_0.nom,f1_0.ville,m2_0.nom,m2_0.prenom,m2_0.nationalite,m2_0.sexe,m1_0.nbExemplaire,m1_0.nom,m1_0.tome,a1_0.nom,s1_0.nom,s1_0.nomDirecteur,s1_0.pays,s1_0.prenomDirecteur,c1_0.nAdherent,c1_0.active,c1_0.age,c1_0.date_adhesion,c1_0.date_naissance,c1_0.email,c1_0.nom,c1_0.password,c1_0.prenom,r1_0.id,r1_0.role,c1_0.sexe,na1_0.date,na1_0.valeur from NoteA na1_0 left join Anime a1_0 on a1_0.nSerie=na1_0.nSerie left join Manga m1_0 on m1_0.nserie=a1_0.nSerieM left join Fournisseur f1_0 on f1_0.nom=m1_0.nomFournisseur left join Mangaka m2_0 on m2_0.nom=m1_0.nomMangaka and m2_0.prenom=m1_0.prenomMangaka left join Studio s1_0 on s1_0.nom=a1_0.nomStudio left join Client c1_0 on c1_0.nAdherent=na1_0.nadherent left join Role r1_0 on r1_0.id=c1_0.roleId where (na1_0.nSerie,na1_0.nadherent) in ((?,?))
2025-02-11T16:12:53.803+01:00  INFO 42568 --- [librairie-online] [main] c.e.l.service.NoteAService               : Note trouvée: com.example.librairie_online.entity.NoteA@c93275f
2025-02-11T16:12:53.804+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : select na1_0.nSerie,na1_0.nadherent,a1_0.nSerie,a1_0.date,m1_0.nserie,m1_0.date_parution,f1_0.nom,f1_0.ville,m2_0.nom,m2_0.prenom,m2_0.nationalite,m2_0.sexe,m1_0.nbExemplaire,m1_0.nom,m1_0.tome,a1_0.nom,s1_0.nom,s1_0.nomDirecteur,s1_0.pays,s1_0.prenomDirecteur,c1_0.nAdherent,c1_0.active,c1_0.age,c1_0.date_adhesion,c1_0.date_naissance,c1_0.email,c1_0.nom,c1_0.password,c1_0.prenom,r1_0.id,r1_0.role,c1_0.sexe,na1_0.date,na1_0.valeur from NoteA na1_0 left join Anime a1_0 on a1_0.nSerie=na1_0.nSerie left join Manga m1_0 on m1_0.nserie=a1_0.nSerieM left join Fournisseur f1_0 on f1_0.nom=m1_0.nomFournisseur left join Mangaka m2_0 on m2_0.nom=m1_0.nomMangaka and m2_0.prenom=m1_0.prenomMangaka left join Studio s1_0 on s1_0.nom=a1_0.nomStudio left join Client c1_0 on c1_0.nAdherent=na1_0.nadherent left join Role r1_0 on r1_0.id=c1_0.roleId where (na1_0.nSerie,na1_0.nadherent) in ((?,?))
2025-02-11T16:12:53.811+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : update NoteA set date=?,valeur=? where nSerie=? and nadherent=?
2025-02-11T16:12:53.817+01:00  INFO 42568 --- [librairie-online] [main] c.e.l.service.NoteAService               : Note mise à jour avec succès: com.example.librairie_online.entity.NoteA@d476a21
2025-02-11T16:12:53.826+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : select na1_0.nSerie,na1_0.nadherent,na1_0.date,na1_0.valeur from NoteA na1_0
2025-02-11T16:12:53.828+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : select a1_0.nSerie,a1_0.date,m1_0.nserie,m1_0.date_parution,f1_0.nom,f1_0.ville,m2_0.nom,m2_0.prenom,m2_0.nationalite,m2_0.sexe,m1_0.nbExemplaire,m1_0.nom,m1_0.tome,a1_0.nom,s1_0.nom,s1_0.nomDirecteur,s1_0.pays,s1_0.prenomDirecteur from Anime a1_0 left join Manga m1_0 on m1_0.nserie=a1_0.nSerieM left join Fournisseur f1_0 on f1_0.nom=m1_0.nomFournisseur left join Mangaka m2_0 on m2_0.nom=m1_0.nomMangaka and m2_0.prenom=m1_0.prenomMangaka left join Studio s1_0 on s1_0.nom=a1_0.nomStudio where a1_0.nSerie=?
2025-02-11T16:12:53.830+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : select c1_0.nAdherent,c1_0.active,c1_0.age,c1_0.date_adhesion,c1_0.date_naissance,c1_0.email,c1_0.nom,c1_0.password,c1_0.prenom,r1_0.id,r1_0.role,c1_0.sexe from Client c1_0 left join Role r1_0 on r1_0.id=c1_0.roleId where c1_0.nAdherent=?
2025-02-11T16:12:53.834+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : delete from NoteA where nSerie=? and nadherent=?
2025-02-11T16:12:53.837+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : select c1_0.nAdherent,c1_0.active,c1_0.age,c1_0.date_adhesion,c1_0.date_naissance,c1_0.email,c1_0.nom,c1_0.password,c1_0.prenom,c1_0.roleId,c1_0.sexe from Client c1_0
2025-02-11T16:12:53.838+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : select r1_0.id,r1_0.role from Role r1_0 where r1_0.id=?
2025-02-11T16:12:53.841+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : delete from Client where nAdherent=?
2025-02-11T16:12:53.845+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : select a1_0.nSerie,a1_0.date,a1_0.nSerieM,a1_0.nom,a1_0.nomStudio from Anime a1_0
2025-02-11T16:12:53.847+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : delete from Anime where nSerie=?
2025-02-11T16:12:53.850+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : select r1_0.id,r1_0.role from Role r1_0
2025-02-11T16:12:53.852+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : delete from Role where id=?
2025-02-11T16:12:53.854+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : insert into Role (role,id) values (?,default)
2025-02-11T16:12:53.857+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : insert into Client (active,age,date_adhesion,date_naissance,email,nom,password,prenom,roleId,sexe,nAdherent) values (?,?,?,?,?,?,?,?,?,?,default)
2025-02-11T16:12:53.860+01:00 DEBUG 42568 --- [librairie-online] [main] org.hibernate.SQL                        : insert into Anime (date,nSerieM,nom,nomStudio,nSerie) values (?,?,?,?,default)
2025-02-11T16:12:53.873+01:00  WARN 42568 --- [librairie-online] [main] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character (',' (code 44)): expected a value]
2025-02-11T16:12:53.916+01:00  INFO 42568 --- [librairie-online] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-02-11T16:12:53.917+01:00 DEBUG 42568 --- [librairie-online] [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists Achete cascade 
2025-02-11T16:12:53.921+01:00 DEBUG 42568 --- [librairie-online] [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists Anime cascade 
2025-02-11T16:12:53.925+01:00 DEBUG 42568 --- [librairie-online] [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists Classe cascade 
2025-02-11T16:12:53.928+01:00 DEBUG 42568 --- [librairie-online] [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists Client cascade 
2025-02-11T16:12:53.931+01:00 DEBUG 42568 --- [librairie-online] [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists Directeur cascade 
2025-02-11T16:12:53.932+01:00 DEBUG 42568 --- [librairie-online] [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists Fournisseur cascade 
2025-02-11T16:12:53.933+01:00 DEBUG 42568 --- [librairie-online] [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists Genre cascade 
2025-02-11T16:12:53.935+01:00 DEBUG 42568 --- [librairie-online] [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists Jwt cascade 
2025-02-11T16:12:53.937+01:00 DEBUG 42568 --- [librairie-online] [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists Loue cascade 
2025-02-11T16:12:53.940+01:00 DEBUG 42568 --- [librairie-online] [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists Manga cascade 
2025-02-11T16:12:53.942+01:00 DEBUG 42568 --- [librairie-online] [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists Mangaka cascade 
2025-02-11T16:12:53.943+01:00 DEBUG 42568 --- [librairie-online] [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists NoteA cascade 
2025-02-11T16:12:53.944+01:00 DEBUG 42568 --- [librairie-online] [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists NoteM cascade 
2025-02-11T16:12:53.945+01:00 DEBUG 42568 --- [librairie-online] [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists Role cascade 
2025-02-11T16:12:53.946+01:00 DEBUG 42568 --- [librairie-online] [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists Studio cascade 
2025-02-11T16:12:53.948+01:00 DEBUG 42568 --- [librairie-online] [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists Validation cascade 
2025-02-11T16:12:53.955+01:00  INFO 42568 --- [librairie-online] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-02-11T16:12:53.962+01:00  INFO 42568 --- [librairie-online] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-02-11T16:13:08.539+01:00  INFO 42693 --- [librairie-online] [main] c.e.l.c.NoteAControllerIntegrationTest   : Starting NoteAControllerIntegrationTest using Java 21.0.5 with PID 42693 (started by cedinacoelho in /Users/cedinacoelho/Documents/src/librairie-online-Spring)
2025-02-11T16:13:08.542+01:00  INFO 42693 --- [librairie-online] [main] c.e.l.c.NoteAControllerIntegrationTest   : The following 1 profile is active: "testNoteA"
2025-02-11T16:13:09.488+01:00  INFO 42693 --- [librairie-online] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-02-11T16:13:09.607+01:00  INFO 42693 --- [librairie-online] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 109 ms. Found 15 JPA repository interfaces.
2025-02-11T16:13:10.369+01:00  INFO 42693 --- [librairie-online] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-02-11T16:13:10.438+01:00  INFO 42693 --- [librairie-online] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2025-02-11T16:13:10.476+01:00  INFO 42693 --- [librairie-online] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-02-11T16:13:10.826+01:00  INFO 42693 --- [librairie-online] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-02-11T16:13:10.859+01:00  INFO 42693 --- [librairie-online] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-02-11T16:13:11.097+01:00  INFO 42693 --- [librairie-online] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdbNoteA user=SA
2025-02-11T16:13:11.100+01:00  INFO 42693 --- [librairie-online] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-02-11T16:13:11.131+01:00  WARN 42693 --- [librairie-online] [main] org.hibernate.orm.deprecation            : HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-02-11T16:13:12.377+01:00  INFO 42693 --- [librairie-online] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-02-11T16:13:12.393+01:00 DEBUG 42693 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Achete cascade 
2025-02-11T16:13:12.398+01:00 DEBUG 42693 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Anime cascade 
2025-02-11T16:13:12.399+01:00 DEBUG 42693 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Classe cascade 
2025-02-11T16:13:12.399+01:00 DEBUG 42693 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Client cascade 
2025-02-11T16:13:12.400+01:00 DEBUG 42693 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Directeur cascade 
2025-02-11T16:13:12.401+01:00 DEBUG 42693 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Fournisseur cascade 
2025-02-11T16:13:12.401+01:00 DEBUG 42693 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Genre cascade 
2025-02-11T16:13:12.403+01:00 DEBUG 42693 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Jwt cascade 
2025-02-11T16:13:12.403+01:00 DEBUG 42693 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Loue cascade 
2025-02-11T16:13:12.404+01:00 DEBUG 42693 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Manga cascade 
2025-02-11T16:13:12.405+01:00 DEBUG 42693 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Mangaka cascade 
2025-02-11T16:13:12.406+01:00 DEBUG 42693 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists NoteA cascade 
2025-02-11T16:13:12.407+01:00 DEBUG 42693 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists NoteM cascade 
2025-02-11T16:13:12.407+01:00 DEBUG 42693 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Role cascade 
2025-02-11T16:13:12.408+01:00 DEBUG 42693 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Studio cascade 
2025-02-11T16:13:12.408+01:00 DEBUG 42693 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Validation cascade 
2025-02-11T16:13:12.413+01:00 DEBUG 42693 --- [librairie-online] [main] org.hibernate.SQL                        : create table Achete (date date, id integer generated by default as identity, nAdherent integer, nSerie integer, prix numeric(9,2), primary key (id))
2025-02-11T16:13:12.423+01:00 DEBUG 42693 --- [librairie-online] [main] org.hibernate.SQL                        : create table Anime (date integer not null, nSerie integer generated by default as identity, nSerieM integer, nom varchar(255), nomStudio varchar(255), primary key (nSerie))
2025-02-11T16:13:12.425+01:00 DEBUG 42693 --- [librairie-online] [main] org.hibernate.SQL                        : create table Classe (nSerie integer not null, type varchar(255) not null, primary key (nSerie, type))
2025-02-11T16:13:12.427+01:00 DEBUG 42693 --- [librairie-online] [main] org.hibernate.SQL                        : create table Client (active boolean not null, age integer not null, date_adhesion date, date_naissance date, nAdherent integer generated by default as identity, roleId integer, email varchar(255), nom varchar(255), password varchar(255), prenom varchar(255), sexe varchar(255), primary key (nAdherent))
2025-02-11T16:13:12.429+01:00 DEBUG 42693 --- [librairie-online] [main] org.hibernate.SQL                        : create table Directeur (id integer generated by default as identity, roleId integer, Username varchar(255), email varchar(255), password varchar(255), primary key (id))
2025-02-11T16:13:12.433+01:00 DEBUG 42693 --- [librairie-online] [main] org.hibernate.SQL                        : create table Fournisseur (nom varchar(255) not null, ville varchar(255), primary key (nom))
2025-02-11T16:13:12.436+01:00 DEBUG 42693 --- [librairie-online] [main] org.hibernate.SQL                        : create table Genre (type varchar(255) not null, primary key (type))
2025-02-11T16:13:12.438+01:00 DEBUG 42693 --- [librairie-online] [main] org.hibernate.SQL                        : create table Jwt (desactive boolean not null, expire boolean not null, id integer generated by default as identity, nAdherent integer, token varchar(255), primary key (id))
2025-02-11T16:13:12.440+01:00 DEBUG 42693 --- [librairie-online] [main] org.hibernate.SQL                        : create table Loue (date date, dateMaximale date, dateRetour date, id integer generated by default as identity, nAdherent integer, nSerie integer, primary key (id))
2025-02-11T16:13:12.442+01:00 DEBUG 42693 --- [librairie-online] [main] org.hibernate.SQL                        : create table Manga (date_parution integer not null, nbExemplaire integer not null, nserie integer generated by default as identity, tome integer not null, nom varchar(255), nomFournisseur varchar(255), nomMangaka varchar(255), prenomMangaka varchar(255), primary key (nserie))
2025-02-11T16:13:12.444+01:00 DEBUG 42693 --- [librairie-online] [main] org.hibernate.SQL                        : create table Mangaka (nationalite varchar(255), nom varchar(255) not null, prenom varchar(255) not null, sexe varchar(255), primary key (nom, prenom))
2025-02-11T16:13:12.446+01:00 DEBUG 42693 --- [librairie-online] [main] org.hibernate.SQL                        : create table NoteA (date date, nSerie integer not null, nadherent integer not null, valeur numeric(38,2), primary key (nSerie, nadherent))
2025-02-11T16:13:12.449+01:00 DEBUG 42693 --- [librairie-online] [main] org.hibernate.SQL                        : create table NoteM (date date, nSerie integer not null, nadherent integer not null, valeur numeric(38,2), primary key (nSerie, nadherent))
2025-02-11T16:13:12.451+01:00 DEBUG 42693 --- [librairie-online] [main] org.hibernate.SQL                        : create table Role (id integer generated by default as identity, role enum ('ADMIN','USER'), primary key (id))
2025-02-11T16:13:12.454+01:00 DEBUG 42693 --- [librairie-online] [main] org.hibernate.SQL                        : create table Studio (nom varchar(255) not null, nomDirecteur varchar(255), pays varchar(255), prenomDirecteur varchar(255), primary key (nom))
2025-02-11T16:13:12.457+01:00 DEBUG 42693 --- [librairie-online] [main] org.hibernate.SQL                        : create table Validation (ClientId integer unique, code integer not null, id integer not null, Activation_instant timestamp(6) with time zone, Creation_instant timestamp(6) with time zone, Expire_instant timestamp(6) with time zone, primary key (id))
2025-02-11T16:13:12.460+01:00 DEBUG 42693 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Achete add constraint FKqb1e2gq63l9dowoni2ercv3ia foreign key (nAdherent) references Client
2025-02-11T16:13:12.474+01:00 DEBUG 42693 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Achete add constraint FKndbwyt78vyn2ixt20vveswpy foreign key (nSerie) references Manga
2025-02-11T16:13:12.476+01:00 DEBUG 42693 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Anime add constraint FKiagcnb38yakykw03xitnyt3wl foreign key (nSerieM) references Manga
2025-02-11T16:13:12.478+01:00 DEBUG 42693 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Anime add constraint FK6eecm0a8wmfpqoij85crf3m0w foreign key (nomStudio) references Studio
2025-02-11T16:13:12.481+01:00 DEBUG 42693 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Classe add constraint FKmndai52ydfxv4egnm62drgpcs foreign key (type) references Genre
2025-02-11T16:13:12.483+01:00 DEBUG 42693 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Classe add constraint FKpc3r5vfpoakf7vrwe8on06ux3 foreign key (nserie) references Manga
2025-02-11T16:13:12.485+01:00 DEBUG 42693 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Client add constraint FK4bpcqc78ucwdr2mk0mpv6dckv foreign key (roleId) references Role
2025-02-11T16:13:12.487+01:00 DEBUG 42693 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Directeur add constraint FK7f93lqs710nn5x4egfx59erpw foreign key (roleId) references Role
2025-02-11T16:13:12.489+01:00 DEBUG 42693 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Jwt add constraint FKfdnulgy4378srgo0lw1qnxn78 foreign key (nAdherent) references Client
2025-02-11T16:13:12.491+01:00 DEBUG 42693 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Loue add constraint FKk9fmioh8om4kdauf119myfy88 foreign key (nSerie) references Anime
2025-02-11T16:13:12.493+01:00 DEBUG 42693 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Loue add constraint FK7uxy40ng4oydutr0xg99abf8n foreign key (nAdherent) references Client
2025-02-11T16:13:12.495+01:00 DEBUG 42693 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Manga add constraint FK6jv3kix0ie77vrix41q74e9dp foreign key (nomFournisseur) references Fournisseur
2025-02-11T16:13:12.498+01:00 DEBUG 42693 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Manga add constraint FKoxc656tng6cku1kgsbq5t1ifb foreign key (nomMangaka, prenomMangaka) references Mangaka
2025-02-11T16:13:12.500+01:00 DEBUG 42693 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists NoteA add constraint FK4se4t04m3xv4jvhufc8nhdfnx foreign key (nSerie) references Anime
2025-02-11T16:13:12.502+01:00 DEBUG 42693 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists NoteA add constraint FK4od391ruf1aqd8e0cqkw04ic5 foreign key (nadherent) references Client
2025-02-11T16:13:12.504+01:00 DEBUG 42693 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists NoteM add constraint FK3eoqdbnmssmi133k9fdsko3d3 foreign key (nadherent) references Client
2025-02-11T16:13:12.506+01:00 DEBUG 42693 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists NoteM add constraint FKqy62n647qukdbu57egrbuerj6 foreign key (nSerie) references Manga
2025-02-11T16:13:12.508+01:00 DEBUG 42693 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Validation add constraint FK3jm2763f48u5y9wfcnhw6yd1p foreign key (ClientId) references Client
2025-02-11T16:13:12.513+01:00  INFO 42693 --- [librairie-online] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-02-11T16:13:13.016+01:00  INFO 42693 --- [librairie-online] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-02-11T16:13:13.499+01:00  INFO 42693 --- [librairie-online] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-02-11T16:13:13.499+01:00  WARN 42693 --- [librairie-online] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2025-02-11T16:13:14.425+01:00  INFO 42693 --- [librairie-online] [main] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdbNoteA'
2025-02-11T16:13:14.538+01:00  INFO 42693 --- [librairie-online] [main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-02-11T16:13:14.538+01:00  INFO 42693 --- [librairie-online] [main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-02-11T16:13:14.541+01:00  INFO 42693 --- [librairie-online] [main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 2 ms
2025-02-11T16:13:14.575+01:00  INFO 42693 --- [librairie-online] [main] c.e.l.c.NoteAControllerIntegrationTest   : Started NoteAControllerIntegrationTest in 6.504 seconds (process running for 8.894)
2025-02-11T16:13:15.346+01:00 DEBUG 42693 --- [librairie-online] [main] org.hibernate.SQL                        : select na1_0.nSerie,na1_0.nadherent,na1_0.date,na1_0.valeur from NoteA na1_0
2025-02-11T16:13:15.373+01:00 DEBUG 42693 --- [librairie-online] [main] org.hibernate.SQL                        : select c1_0.nAdherent,c1_0.active,c1_0.age,c1_0.date_adhesion,c1_0.date_naissance,c1_0.email,c1_0.nom,c1_0.password,c1_0.prenom,c1_0.roleId,c1_0.sexe from Client c1_0
2025-02-11T16:13:15.376+01:00 DEBUG 42693 --- [librairie-online] [main] org.hibernate.SQL                        : select a1_0.nSerie,a1_0.date,a1_0.nSerieM,a1_0.nom,a1_0.nomStudio from Anime a1_0
2025-02-11T16:13:15.380+01:00 DEBUG 42693 --- [librairie-online] [main] org.hibernate.SQL                        : select r1_0.id,r1_0.role from Role r1_0
2025-02-11T16:13:15.403+01:00 DEBUG 42693 --- [librairie-online] [main] org.hibernate.SQL                        : insert into Role (role,id) values (?,default)
2025-02-11T16:13:15.432+01:00 DEBUG 42693 --- [librairie-online] [main] org.hibernate.SQL                        : insert into Client (active,age,date_adhesion,date_naissance,email,nom,password,prenom,roleId,sexe,nAdherent) values (?,?,?,?,?,?,?,?,?,?,default)
2025-02-11T16:13:15.437+01:00 DEBUG 42693 --- [librairie-online] [main] org.hibernate.SQL                        : insert into Anime (date,nSerieM,nom,nomStudio,nSerie) values (?,?,?,?,default)
2025-02-11T16:14:13.704+01:00  INFO 43230 --- [librairie-online] [main] c.e.l.c.NoteAControllerIntegrationTest   : Starting NoteAControllerIntegrationTest using Java 21.0.5 with PID 43230 (started by cedinacoelho in /Users/cedinacoelho/Documents/src/librairie-online-Spring)
2025-02-11T16:14:13.706+01:00  INFO 43230 --- [librairie-online] [main] c.e.l.c.NoteAControllerIntegrationTest   : The following 1 profile is active: "testNoteA"
2025-02-11T16:14:14.601+01:00  INFO 43230 --- [librairie-online] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-02-11T16:14:14.706+01:00  INFO 43230 --- [librairie-online] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 96 ms. Found 15 JPA repository interfaces.
2025-02-11T16:14:15.363+01:00  INFO 43230 --- [librairie-online] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-02-11T16:14:15.422+01:00  INFO 43230 --- [librairie-online] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2025-02-11T16:14:15.464+01:00  INFO 43230 --- [librairie-online] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-02-11T16:14:15.791+01:00  INFO 43230 --- [librairie-online] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-02-11T16:14:15.821+01:00  INFO 43230 --- [librairie-online] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-02-11T16:14:16.071+01:00  INFO 43230 --- [librairie-online] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdbNoteA user=SA
2025-02-11T16:14:16.073+01:00  INFO 43230 --- [librairie-online] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-02-11T16:14:16.104+01:00  WARN 43230 --- [librairie-online] [main] org.hibernate.orm.deprecation            : HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-02-11T16:14:17.338+01:00  INFO 43230 --- [librairie-online] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-02-11T16:14:17.353+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Achete cascade 
2025-02-11T16:14:17.357+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Anime cascade 
2025-02-11T16:14:17.358+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Classe cascade 
2025-02-11T16:14:17.358+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Client cascade 
2025-02-11T16:14:17.359+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Directeur cascade 
2025-02-11T16:14:17.359+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Fournisseur cascade 
2025-02-11T16:14:17.360+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Genre cascade 
2025-02-11T16:14:17.361+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Jwt cascade 
2025-02-11T16:14:17.362+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Loue cascade 
2025-02-11T16:14:17.362+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Manga cascade 
2025-02-11T16:14:17.363+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Mangaka cascade 
2025-02-11T16:14:17.363+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists NoteA cascade 
2025-02-11T16:14:17.364+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists NoteM cascade 
2025-02-11T16:14:17.365+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Role cascade 
2025-02-11T16:14:17.365+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Studio cascade 
2025-02-11T16:14:17.366+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : drop table if exists Validation cascade 
2025-02-11T16:14:17.371+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : create table Achete (date date, id integer generated by default as identity, nAdherent integer, nSerie integer, prix numeric(9,2), primary key (id))
2025-02-11T16:14:17.380+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : create table Anime (date integer not null, nSerie integer generated by default as identity, nSerieM integer, nom varchar(255), nomStudio varchar(255), primary key (nSerie))
2025-02-11T16:14:17.382+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : create table Classe (nSerie integer not null, type varchar(255) not null, primary key (nSerie, type))
2025-02-11T16:14:17.384+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : create table Client (active boolean not null, age integer not null, date_adhesion date, date_naissance date, nAdherent integer generated by default as identity, roleId integer, email varchar(255), nom varchar(255), password varchar(255), prenom varchar(255), sexe varchar(255), primary key (nAdherent))
2025-02-11T16:14:17.386+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : create table Directeur (id integer generated by default as identity, roleId integer, Username varchar(255), email varchar(255), password varchar(255), primary key (id))
2025-02-11T16:14:17.388+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : create table Fournisseur (nom varchar(255) not null, ville varchar(255), primary key (nom))
2025-02-11T16:14:17.389+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : create table Genre (type varchar(255) not null, primary key (type))
2025-02-11T16:14:17.391+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : create table Jwt (desactive boolean not null, expire boolean not null, id integer generated by default as identity, nAdherent integer, token varchar(255), primary key (id))
2025-02-11T16:14:17.393+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : create table Loue (date date, dateMaximale date, dateRetour date, id integer generated by default as identity, nAdherent integer, nSerie integer, primary key (id))
2025-02-11T16:14:17.395+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : create table Manga (date_parution integer not null, nbExemplaire integer not null, nserie integer generated by default as identity, tome integer not null, nom varchar(255), nomFournisseur varchar(255), nomMangaka varchar(255), prenomMangaka varchar(255), primary key (nserie))
2025-02-11T16:14:17.397+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : create table Mangaka (nationalite varchar(255), nom varchar(255) not null, prenom varchar(255) not null, sexe varchar(255), primary key (nom, prenom))
2025-02-11T16:14:17.399+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : create table NoteA (date date, nSerie integer not null, nadherent integer not null, valeur numeric(38,2), primary key (nSerie, nadherent))
2025-02-11T16:14:17.401+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : create table NoteM (date date, nSerie integer not null, nadherent integer not null, valeur numeric(38,2), primary key (nSerie, nadherent))
2025-02-11T16:14:17.404+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : create table Role (id integer generated by default as identity, role enum ('ADMIN','USER'), primary key (id))
2025-02-11T16:14:17.406+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : create table Studio (nom varchar(255) not null, nomDirecteur varchar(255), pays varchar(255), prenomDirecteur varchar(255), primary key (nom))
2025-02-11T16:14:17.408+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : create table Validation (ClientId integer unique, code integer not null, id integer not null, Activation_instant timestamp(6) with time zone, Creation_instant timestamp(6) with time zone, Expire_instant timestamp(6) with time zone, primary key (id))
2025-02-11T16:14:17.411+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Achete add constraint FKqb1e2gq63l9dowoni2ercv3ia foreign key (nAdherent) references Client
2025-02-11T16:14:17.423+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Achete add constraint FKndbwyt78vyn2ixt20vveswpy foreign key (nSerie) references Manga
2025-02-11T16:14:17.425+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Anime add constraint FKiagcnb38yakykw03xitnyt3wl foreign key (nSerieM) references Manga
2025-02-11T16:14:17.428+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Anime add constraint FK6eecm0a8wmfpqoij85crf3m0w foreign key (nomStudio) references Studio
2025-02-11T16:14:17.431+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Classe add constraint FKmndai52ydfxv4egnm62drgpcs foreign key (type) references Genre
2025-02-11T16:14:17.433+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Classe add constraint FKpc3r5vfpoakf7vrwe8on06ux3 foreign key (nserie) references Manga
2025-02-11T16:14:17.435+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Client add constraint FK4bpcqc78ucwdr2mk0mpv6dckv foreign key (roleId) references Role
2025-02-11T16:14:17.438+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Directeur add constraint FK7f93lqs710nn5x4egfx59erpw foreign key (roleId) references Role
2025-02-11T16:14:17.439+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Jwt add constraint FKfdnulgy4378srgo0lw1qnxn78 foreign key (nAdherent) references Client
2025-02-11T16:14:17.442+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Loue add constraint FKk9fmioh8om4kdauf119myfy88 foreign key (nSerie) references Anime
2025-02-11T16:14:17.444+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Loue add constraint FK7uxy40ng4oydutr0xg99abf8n foreign key (nAdherent) references Client
2025-02-11T16:14:17.447+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Manga add constraint FK6jv3kix0ie77vrix41q74e9dp foreign key (nomFournisseur) references Fournisseur
2025-02-11T16:14:17.448+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Manga add constraint FKoxc656tng6cku1kgsbq5t1ifb foreign key (nomMangaka, prenomMangaka) references Mangaka
2025-02-11T16:14:17.451+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists NoteA add constraint FK4se4t04m3xv4jvhufc8nhdfnx foreign key (nSerie) references Anime
2025-02-11T16:14:17.453+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists NoteA add constraint FK4od391ruf1aqd8e0cqkw04ic5 foreign key (nadherent) references Client
2025-02-11T16:14:17.456+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists NoteM add constraint FK3eoqdbnmssmi133k9fdsko3d3 foreign key (nadherent) references Client
2025-02-11T16:14:17.459+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists NoteM add constraint FKqy62n647qukdbu57egrbuerj6 foreign key (nSerie) references Manga
2025-02-11T16:14:17.461+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : alter table if exists Validation add constraint FK3jm2763f48u5y9wfcnhw6yd1p foreign key (ClientId) references Client
2025-02-11T16:14:17.467+01:00  INFO 43230 --- [librairie-online] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-02-11T16:14:18.007+01:00  INFO 43230 --- [librairie-online] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-02-11T16:14:18.488+01:00  INFO 43230 --- [librairie-online] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-02-11T16:14:18.489+01:00  WARN 43230 --- [librairie-online] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2025-02-11T16:14:19.449+01:00  INFO 43230 --- [librairie-online] [main] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdbNoteA'
2025-02-11T16:14:19.548+01:00  INFO 43230 --- [librairie-online] [main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-02-11T16:14:19.548+01:00  INFO 43230 --- [librairie-online] [main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-02-11T16:14:19.551+01:00  INFO 43230 --- [librairie-online] [main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 3 ms
2025-02-11T16:14:19.584+01:00  INFO 43230 --- [librairie-online] [main] c.e.l.c.NoteAControllerIntegrationTest   : Started NoteAControllerIntegrationTest in 6.352 seconds (process running for 7.456)
2025-02-11T16:14:20.283+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : select na1_0.nSerie,na1_0.nadherent,na1_0.date,na1_0.valeur from NoteA na1_0
2025-02-11T16:14:20.309+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : select c1_0.nAdherent,c1_0.active,c1_0.age,c1_0.date_adhesion,c1_0.date_naissance,c1_0.email,c1_0.nom,c1_0.password,c1_0.prenom,c1_0.roleId,c1_0.sexe from Client c1_0
2025-02-11T16:14:20.312+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : select a1_0.nSerie,a1_0.date,a1_0.nSerieM,a1_0.nom,a1_0.nomStudio from Anime a1_0
2025-02-11T16:14:20.315+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : select r1_0.id,r1_0.role from Role r1_0
2025-02-11T16:14:20.335+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : insert into Role (role,id) values (?,default)
2025-02-11T16:14:20.358+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : insert into Client (active,age,date_adhesion,date_naissance,email,nom,password,prenom,roleId,sexe,nAdherent) values (?,?,?,?,?,?,?,?,?,?,default)
2025-02-11T16:14:20.363+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : insert into Anime (date,nSerieM,nom,nomStudio,nSerie) values (?,?,?,?,default)
2025-02-11T16:14:20.381+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : select na1_0.nSerie,na1_0.nadherent,a1_0.nSerie,a1_0.date,m1_0.nserie,m1_0.date_parution,f1_0.nom,f1_0.ville,m2_0.nom,m2_0.prenom,m2_0.nationalite,m2_0.sexe,m1_0.nbExemplaire,m1_0.nom,m1_0.tome,a1_0.nom,s1_0.nom,s1_0.nomDirecteur,s1_0.pays,s1_0.prenomDirecteur,c1_0.nAdherent,c1_0.active,c1_0.age,c1_0.date_adhesion,c1_0.date_naissance,c1_0.email,c1_0.nom,c1_0.password,c1_0.prenom,r1_0.id,r1_0.role,c1_0.sexe,na1_0.date,na1_0.valeur from NoteA na1_0 left join Anime a1_0 on a1_0.nSerie=na1_0.nSerie left join Manga m1_0 on m1_0.nserie=a1_0.nSerieM left join Fournisseur f1_0 on f1_0.nom=m1_0.nomFournisseur left join Mangaka m2_0 on m2_0.nom=m1_0.nomMangaka and m2_0.prenom=m1_0.prenomMangaka left join Studio s1_0 on s1_0.nom=a1_0.nomStudio left join Client c1_0 on c1_0.nAdherent=na1_0.nadherent left join Role r1_0 on r1_0.id=c1_0.roleId where (na1_0.nSerie,na1_0.nadherent) in ((?,?))
2025-02-11T16:14:20.390+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : insert into NoteA (date,valeur,nSerie,nadherent) values (?,?,?,?)
2025-02-11T16:14:20.439+01:00  INFO 43230 --- [librairie-online] [main] c.e.l.service.NoteAService               : Recherche d'une note avec l'ID: com.example.librairie_online.entity.NoteA$NoteAId@3e1
2025-02-11T16:14:20.445+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : select na1_0.nSerie,na1_0.nadherent,a1_0.nSerie,a1_0.date,m1_0.nserie,m1_0.date_parution,f1_0.nom,f1_0.ville,m2_0.nom,m2_0.prenom,m2_0.nationalite,m2_0.sexe,m1_0.nbExemplaire,m1_0.nom,m1_0.tome,a1_0.nom,s1_0.nom,s1_0.nomDirecteur,s1_0.pays,s1_0.prenomDirecteur,c1_0.nAdherent,c1_0.active,c1_0.age,c1_0.date_adhesion,c1_0.date_naissance,c1_0.email,c1_0.nom,c1_0.password,c1_0.prenom,r1_0.id,r1_0.role,c1_0.sexe,na1_0.date,na1_0.valeur from NoteA na1_0 left join Anime a1_0 on a1_0.nSerie=na1_0.nSerie left join Manga m1_0 on m1_0.nserie=a1_0.nSerieM left join Fournisseur f1_0 on f1_0.nom=m1_0.nomFournisseur left join Mangaka m2_0 on m2_0.nom=m1_0.nomMangaka and m2_0.prenom=m1_0.prenomMangaka left join Studio s1_0 on s1_0.nom=a1_0.nomStudio left join Client c1_0 on c1_0.nAdherent=na1_0.nadherent left join Role r1_0 on r1_0.id=c1_0.roleId where (na1_0.nSerie,na1_0.nadherent) in ((?,?))
2025-02-11T16:14:20.452+01:00  INFO 43230 --- [librairie-online] [main] c.e.l.service.NoteAService               : Note trouvée: com.example.librairie_online.entity.NoteA@3f06c9ac
2025-02-11T16:14:20.452+01:00  INFO 43230 --- [librairie-online] [main] c.e.l.service.NoteAService               : Suppression de la note avec l'ID: com.example.librairie_online.entity.NoteA$NoteAId@3e1
2025-02-11T16:14:20.489+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : select count(*) from NoteA na1_0 where na1_0.nadherent=? and na1_0.nSerie=?
2025-02-11T16:14:20.494+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : select na1_0.nSerie,na1_0.nadherent,a1_0.nSerie,a1_0.date,m1_0.nserie,m1_0.date_parution,f1_0.nom,f1_0.ville,m2_0.nom,m2_0.prenom,m2_0.nationalite,m2_0.sexe,m1_0.nbExemplaire,m1_0.nom,m1_0.tome,a1_0.nom,s1_0.nom,s1_0.nomDirecteur,s1_0.pays,s1_0.prenomDirecteur,c1_0.nAdherent,c1_0.active,c1_0.age,c1_0.date_adhesion,c1_0.date_naissance,c1_0.email,c1_0.nom,c1_0.password,c1_0.prenom,r1_0.id,r1_0.role,c1_0.sexe,na1_0.date,na1_0.valeur from NoteA na1_0 left join Anime a1_0 on a1_0.nSerie=na1_0.nSerie left join Manga m1_0 on m1_0.nserie=a1_0.nSerieM left join Fournisseur f1_0 on f1_0.nom=m1_0.nomFournisseur left join Mangaka m2_0 on m2_0.nom=m1_0.nomMangaka and m2_0.prenom=m1_0.prenomMangaka left join Studio s1_0 on s1_0.nom=a1_0.nomStudio left join Client c1_0 on c1_0.nAdherent=na1_0.nadherent left join Role r1_0 on r1_0.id=c1_0.roleId where (na1_0.nSerie,na1_0.nadherent) in ((?,?))
2025-02-11T16:14:20.502+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : delete from NoteA where nSerie=? and nadherent=?
2025-02-11T16:14:20.505+01:00  INFO 43230 --- [librairie-online] [main] c.e.l.service.NoteAService               : Note supprimée avec succès.
2025-02-11T16:14:20.532+01:00  INFO 43230 --- [librairie-online] [main] c.e.l.service.NoteAService               : Recherche d'une note avec l'ID: com.example.librairie_online.entity.NoteA$NoteAId@3e1
2025-02-11T16:14:20.533+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : select na1_0.nSerie,na1_0.nadherent,a1_0.nSerie,a1_0.date,m1_0.nserie,m1_0.date_parution,f1_0.nom,f1_0.ville,m2_0.nom,m2_0.prenom,m2_0.nationalite,m2_0.sexe,m1_0.nbExemplaire,m1_0.nom,m1_0.tome,a1_0.nom,s1_0.nom,s1_0.nomDirecteur,s1_0.pays,s1_0.prenomDirecteur,c1_0.nAdherent,c1_0.active,c1_0.age,c1_0.date_adhesion,c1_0.date_naissance,c1_0.email,c1_0.nom,c1_0.password,c1_0.prenom,r1_0.id,r1_0.role,c1_0.sexe,na1_0.date,na1_0.valeur from NoteA na1_0 left join Anime a1_0 on a1_0.nSerie=na1_0.nSerie left join Manga m1_0 on m1_0.nserie=a1_0.nSerieM left join Fournisseur f1_0 on f1_0.nom=m1_0.nomFournisseur left join Mangaka m2_0 on m2_0.nom=m1_0.nomMangaka and m2_0.prenom=m1_0.prenomMangaka left join Studio s1_0 on s1_0.nom=a1_0.nomStudio left join Client c1_0 on c1_0.nAdherent=na1_0.nadherent left join Role r1_0 on r1_0.id=c1_0.roleId where (na1_0.nSerie,na1_0.nadherent) in ((?,?))
2025-02-11T16:14:20.534+01:00  WARN 43230 --- [librairie-online] [main] c.e.l.service.NoteAService               : Aucune note trouvée avec l'ID: com.example.librairie_online.entity.NoteA$NoteAId@3e1
2025-02-11T16:14:20.578+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : select na1_0.nSerie,na1_0.nadherent,na1_0.date,na1_0.valeur from NoteA na1_0
2025-02-11T16:14:20.580+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : select c1_0.nAdherent,c1_0.active,c1_0.age,c1_0.date_adhesion,c1_0.date_naissance,c1_0.email,c1_0.nom,c1_0.password,c1_0.prenom,c1_0.roleId,c1_0.sexe from Client c1_0
2025-02-11T16:14:20.582+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : select r1_0.id,r1_0.role from Role r1_0 where r1_0.id=?
2025-02-11T16:14:20.585+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : delete from Client where nAdherent=?
2025-02-11T16:14:20.588+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : select a1_0.nSerie,a1_0.date,a1_0.nSerieM,a1_0.nom,a1_0.nomStudio from Anime a1_0
2025-02-11T16:14:20.591+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : delete from Anime where nSerie=?
2025-02-11T16:14:20.594+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : select r1_0.id,r1_0.role from Role r1_0
2025-02-11T16:14:20.596+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : delete from Role where id=?
2025-02-11T16:14:20.598+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : insert into Role (role,id) values (?,default)
2025-02-11T16:14:20.601+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : insert into Client (active,age,date_adhesion,date_naissance,email,nom,password,prenom,roleId,sexe,nAdherent) values (?,?,?,?,?,?,?,?,?,?,default)
2025-02-11T16:14:20.606+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : insert into Anime (date,nSerieM,nom,nomStudio,nSerie) values (?,?,?,?,default)
2025-02-11T16:14:20.612+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : select na1_0.nSerie,na1_0.nadherent,a1_0.nSerie,a1_0.date,m1_0.nserie,m1_0.date_parution,f1_0.nom,f1_0.ville,m2_0.nom,m2_0.prenom,m2_0.nationalite,m2_0.sexe,m1_0.nbExemplaire,m1_0.nom,m1_0.tome,a1_0.nom,s1_0.nom,s1_0.nomDirecteur,s1_0.pays,s1_0.prenomDirecteur,c1_0.nAdherent,c1_0.active,c1_0.age,c1_0.date_adhesion,c1_0.date_naissance,c1_0.email,c1_0.nom,c1_0.password,c1_0.prenom,r1_0.id,r1_0.role,c1_0.sexe,na1_0.date,na1_0.valeur from NoteA na1_0 left join Anime a1_0 on a1_0.nSerie=na1_0.nSerie left join Manga m1_0 on m1_0.nserie=a1_0.nSerieM left join Fournisseur f1_0 on f1_0.nom=m1_0.nomFournisseur left join Mangaka m2_0 on m2_0.nom=m1_0.nomMangaka and m2_0.prenom=m1_0.prenomMangaka left join Studio s1_0 on s1_0.nom=a1_0.nomStudio left join Client c1_0 on c1_0.nAdherent=na1_0.nadherent left join Role r1_0 on r1_0.id=c1_0.roleId where (na1_0.nSerie,na1_0.nadherent) in ((?,?))
2025-02-11T16:14:20.617+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : insert into NoteA (date,valeur,nSerie,nadherent) values (?,?,?,?)
2025-02-11T16:14:20.622+01:00  INFO 43230 --- [librairie-online] [main] c.e.l.service.NoteAService               : Récupération de toutes les notes.
2025-02-11T16:14:20.626+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : select na1_0.nSerie,na1_0.nadherent,na1_0.date,na1_0.valeur from NoteA na1_0
2025-02-11T16:14:20.628+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : select a1_0.nSerie,a1_0.date,m1_0.nserie,m1_0.date_parution,f1_0.nom,f1_0.ville,m2_0.nom,m2_0.prenom,m2_0.nationalite,m2_0.sexe,m1_0.nbExemplaire,m1_0.nom,m1_0.tome,a1_0.nom,s1_0.nom,s1_0.nomDirecteur,s1_0.pays,s1_0.prenomDirecteur from Anime a1_0 left join Manga m1_0 on m1_0.nserie=a1_0.nSerieM left join Fournisseur f1_0 on f1_0.nom=m1_0.nomFournisseur left join Mangaka m2_0 on m2_0.nom=m1_0.nomMangaka and m2_0.prenom=m1_0.prenomMangaka left join Studio s1_0 on s1_0.nom=a1_0.nomStudio where a1_0.nSerie=?
2025-02-11T16:14:20.631+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : select c1_0.nAdherent,c1_0.active,c1_0.age,c1_0.date_adhesion,c1_0.date_naissance,c1_0.email,c1_0.nom,c1_0.password,c1_0.prenom,r1_0.id,r1_0.role,c1_0.sexe from Client c1_0 left join Role r1_0 on r1_0.id=c1_0.roleId where c1_0.nAdherent=?
2025-02-11T16:14:20.637+01:00  INFO 43230 --- [librairie-online] [main] c.e.l.service.NoteAService               : Nombre total de notes récupérées: 1
2025-02-11T16:14:20.710+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : select na1_0.nSerie,na1_0.nadherent,na1_0.date,na1_0.valeur from NoteA na1_0
2025-02-11T16:14:20.712+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : select a1_0.nSerie,a1_0.date,m1_0.nserie,m1_0.date_parution,f1_0.nom,f1_0.ville,m2_0.nom,m2_0.prenom,m2_0.nationalite,m2_0.sexe,m1_0.nbExemplaire,m1_0.nom,m1_0.tome,a1_0.nom,s1_0.nom,s1_0.nomDirecteur,s1_0.pays,s1_0.prenomDirecteur from Anime a1_0 left join Manga m1_0 on m1_0.nserie=a1_0.nSerieM left join Fournisseur f1_0 on f1_0.nom=m1_0.nomFournisseur left join Mangaka m2_0 on m2_0.nom=m1_0.nomMangaka and m2_0.prenom=m1_0.prenomMangaka left join Studio s1_0 on s1_0.nom=a1_0.nomStudio where a1_0.nSerie=?
2025-02-11T16:14:20.713+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : select c1_0.nAdherent,c1_0.active,c1_0.age,c1_0.date_adhesion,c1_0.date_naissance,c1_0.email,c1_0.nom,c1_0.password,c1_0.prenom,r1_0.id,r1_0.role,c1_0.sexe from Client c1_0 left join Role r1_0 on r1_0.id=c1_0.roleId where c1_0.nAdherent=?
2025-02-11T16:14:20.716+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : delete from NoteA where nSerie=? and nadherent=?
2025-02-11T16:14:20.723+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : select c1_0.nAdherent,c1_0.active,c1_0.age,c1_0.date_adhesion,c1_0.date_naissance,c1_0.email,c1_0.nom,c1_0.password,c1_0.prenom,c1_0.roleId,c1_0.sexe from Client c1_0
2025-02-11T16:14:20.725+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : select r1_0.id,r1_0.role from Role r1_0 where r1_0.id=?
2025-02-11T16:14:20.727+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : delete from Client where nAdherent=?
2025-02-11T16:14:20.730+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : select a1_0.nSerie,a1_0.date,a1_0.nSerieM,a1_0.nom,a1_0.nomStudio from Anime a1_0
2025-02-11T16:14:20.732+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : delete from Anime where nSerie=?
2025-02-11T16:14:20.734+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : select r1_0.id,r1_0.role from Role r1_0
2025-02-11T16:14:20.737+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : delete from Role where id=?
2025-02-11T16:14:20.739+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : insert into Role (role,id) values (?,default)
2025-02-11T16:14:20.742+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : insert into Client (active,age,date_adhesion,date_naissance,email,nom,password,prenom,roleId,sexe,nAdherent) values (?,?,?,?,?,?,?,?,?,?,default)
2025-02-11T16:14:20.746+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : insert into Anime (date,nSerieM,nom,nomStudio,nSerie) values (?,?,?,?,default)
2025-02-11T16:14:20.750+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : select na1_0.nSerie,na1_0.nadherent,a1_0.nSerie,a1_0.date,m1_0.nserie,m1_0.date_parution,f1_0.nom,f1_0.ville,m2_0.nom,m2_0.prenom,m2_0.nationalite,m2_0.sexe,m1_0.nbExemplaire,m1_0.nom,m1_0.tome,a1_0.nom,s1_0.nom,s1_0.nomDirecteur,s1_0.pays,s1_0.prenomDirecteur,c1_0.nAdherent,c1_0.active,c1_0.age,c1_0.date_adhesion,c1_0.date_naissance,c1_0.email,c1_0.nom,c1_0.password,c1_0.prenom,r1_0.id,r1_0.role,c1_0.sexe,na1_0.date,na1_0.valeur from NoteA na1_0 left join Anime a1_0 on a1_0.nSerie=na1_0.nSerie left join Manga m1_0 on m1_0.nserie=a1_0.nSerieM left join Fournisseur f1_0 on f1_0.nom=m1_0.nomFournisseur left join Mangaka m2_0 on m2_0.nom=m1_0.nomMangaka and m2_0.prenom=m1_0.prenomMangaka left join Studio s1_0 on s1_0.nom=a1_0.nomStudio left join Client c1_0 on c1_0.nAdherent=na1_0.nadherent left join Role r1_0 on r1_0.id=c1_0.roleId where (na1_0.nSerie,na1_0.nadherent) in ((?,?))
2025-02-11T16:14:20.754+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : insert into NoteA (date,valeur,nSerie,nadherent) values (?,?,?,?)
2025-02-11T16:14:20.799+01:00  INFO 43230 --- [librairie-online] [main] c.e.l.service.NoteAService               : Recherche d'une note avec l'ID: com.example.librairie_online.entity.NoteA$NoteAId@421
2025-02-11T16:14:20.800+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : select na1_0.nSerie,na1_0.nadherent,a1_0.nSerie,a1_0.date,m1_0.nserie,m1_0.date_parution,f1_0.nom,f1_0.ville,m2_0.nom,m2_0.prenom,m2_0.nationalite,m2_0.sexe,m1_0.nbExemplaire,m1_0.nom,m1_0.tome,a1_0.nom,s1_0.nom,s1_0.nomDirecteur,s1_0.pays,s1_0.prenomDirecteur,c1_0.nAdherent,c1_0.active,c1_0.age,c1_0.date_adhesion,c1_0.date_naissance,c1_0.email,c1_0.nom,c1_0.password,c1_0.prenom,r1_0.id,r1_0.role,c1_0.sexe,na1_0.date,na1_0.valeur from NoteA na1_0 left join Anime a1_0 on a1_0.nSerie=na1_0.nSerie left join Manga m1_0 on m1_0.nserie=a1_0.nSerieM left join Fournisseur f1_0 on f1_0.nom=m1_0.nomFournisseur left join Mangaka m2_0 on m2_0.nom=m1_0.nomMangaka and m2_0.prenom=m1_0.prenomMangaka left join Studio s1_0 on s1_0.nom=a1_0.nomStudio left join Client c1_0 on c1_0.nAdherent=na1_0.nadherent left join Role r1_0 on r1_0.id=c1_0.roleId where (na1_0.nSerie,na1_0.nadherent) in ((?,?))
2025-02-11T16:14:20.802+01:00  INFO 43230 --- [librairie-online] [main] c.e.l.service.NoteAService               : Note trouvée: com.example.librairie_online.entity.NoteA@66cdde2b
2025-02-11T16:14:20.802+01:00  INFO 43230 --- [librairie-online] [main] c.e.l.service.NoteAService               : Mise à jour de la note avec l'ID: com.example.librairie_online.entity.NoteA$NoteAId@421
2025-02-11T16:14:20.802+01:00  INFO 43230 --- [librairie-online] [main] c.e.l.service.NoteAService               : Recherche d'une note avec l'ID: com.example.librairie_online.entity.NoteA$NoteAId@421
2025-02-11T16:14:20.804+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : select na1_0.nSerie,na1_0.nadherent,a1_0.nSerie,a1_0.date,m1_0.nserie,m1_0.date_parution,f1_0.nom,f1_0.ville,m2_0.nom,m2_0.prenom,m2_0.nationalite,m2_0.sexe,m1_0.nbExemplaire,m1_0.nom,m1_0.tome,a1_0.nom,s1_0.nom,s1_0.nomDirecteur,s1_0.pays,s1_0.prenomDirecteur,c1_0.nAdherent,c1_0.active,c1_0.age,c1_0.date_adhesion,c1_0.date_naissance,c1_0.email,c1_0.nom,c1_0.password,c1_0.prenom,r1_0.id,r1_0.role,c1_0.sexe,na1_0.date,na1_0.valeur from NoteA na1_0 left join Anime a1_0 on a1_0.nSerie=na1_0.nSerie left join Manga m1_0 on m1_0.nserie=a1_0.nSerieM left join Fournisseur f1_0 on f1_0.nom=m1_0.nomFournisseur left join Mangaka m2_0 on m2_0.nom=m1_0.nomMangaka and m2_0.prenom=m1_0.prenomMangaka left join Studio s1_0 on s1_0.nom=a1_0.nomStudio left join Client c1_0 on c1_0.nAdherent=na1_0.nadherent left join Role r1_0 on r1_0.id=c1_0.roleId where (na1_0.nSerie,na1_0.nadherent) in ((?,?))
2025-02-11T16:14:20.806+01:00  INFO 43230 --- [librairie-online] [main] c.e.l.service.NoteAService               : Note trouvée: com.example.librairie_online.entity.NoteA@c93275f
2025-02-11T16:14:20.808+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : select na1_0.nSerie,na1_0.nadherent,a1_0.nSerie,a1_0.date,m1_0.nserie,m1_0.date_parution,f1_0.nom,f1_0.ville,m2_0.nom,m2_0.prenom,m2_0.nationalite,m2_0.sexe,m1_0.nbExemplaire,m1_0.nom,m1_0.tome,a1_0.nom,s1_0.nom,s1_0.nomDirecteur,s1_0.pays,s1_0.prenomDirecteur,c1_0.nAdherent,c1_0.active,c1_0.age,c1_0.date_adhesion,c1_0.date_naissance,c1_0.email,c1_0.nom,c1_0.password,c1_0.prenom,r1_0.id,r1_0.role,c1_0.sexe,na1_0.date,na1_0.valeur from NoteA na1_0 left join Anime a1_0 on a1_0.nSerie=na1_0.nSerie left join Manga m1_0 on m1_0.nserie=a1_0.nSerieM left join Fournisseur f1_0 on f1_0.nom=m1_0.nomFournisseur left join Mangaka m2_0 on m2_0.nom=m1_0.nomMangaka and m2_0.prenom=m1_0.prenomMangaka left join Studio s1_0 on s1_0.nom=a1_0.nomStudio left join Client c1_0 on c1_0.nAdherent=na1_0.nadherent left join Role r1_0 on r1_0.id=c1_0.roleId where (na1_0.nSerie,na1_0.nadherent) in ((?,?))
2025-02-11T16:14:20.814+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : update NoteA set date=?,valeur=? where nSerie=? and nadherent=?
2025-02-11T16:14:20.820+01:00  INFO 43230 --- [librairie-online] [main] c.e.l.service.NoteAService               : Note mise à jour avec succès: com.example.librairie_online.entity.NoteA@d476a21
2025-02-11T16:14:20.831+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : select na1_0.nSerie,na1_0.nadherent,na1_0.date,na1_0.valeur from NoteA na1_0
2025-02-11T16:14:20.832+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : select a1_0.nSerie,a1_0.date,m1_0.nserie,m1_0.date_parution,f1_0.nom,f1_0.ville,m2_0.nom,m2_0.prenom,m2_0.nationalite,m2_0.sexe,m1_0.nbExemplaire,m1_0.nom,m1_0.tome,a1_0.nom,s1_0.nom,s1_0.nomDirecteur,s1_0.pays,s1_0.prenomDirecteur from Anime a1_0 left join Manga m1_0 on m1_0.nserie=a1_0.nSerieM left join Fournisseur f1_0 on f1_0.nom=m1_0.nomFournisseur left join Mangaka m2_0 on m2_0.nom=m1_0.nomMangaka and m2_0.prenom=m1_0.prenomMangaka left join Studio s1_0 on s1_0.nom=a1_0.nomStudio where a1_0.nSerie=?
2025-02-11T16:14:20.834+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : select c1_0.nAdherent,c1_0.active,c1_0.age,c1_0.date_adhesion,c1_0.date_naissance,c1_0.email,c1_0.nom,c1_0.password,c1_0.prenom,r1_0.id,r1_0.role,c1_0.sexe from Client c1_0 left join Role r1_0 on r1_0.id=c1_0.roleId where c1_0.nAdherent=?
2025-02-11T16:14:20.837+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : delete from NoteA where nSerie=? and nadherent=?
2025-02-11T16:14:20.840+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : select c1_0.nAdherent,c1_0.active,c1_0.age,c1_0.date_adhesion,c1_0.date_naissance,c1_0.email,c1_0.nom,c1_0.password,c1_0.prenom,c1_0.roleId,c1_0.sexe from Client c1_0
2025-02-11T16:14:20.841+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : select r1_0.id,r1_0.role from Role r1_0 where r1_0.id=?
2025-02-11T16:14:20.843+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : delete from Client where nAdherent=?
2025-02-11T16:14:20.846+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : select a1_0.nSerie,a1_0.date,a1_0.nSerieM,a1_0.nom,a1_0.nomStudio from Anime a1_0
2025-02-11T16:14:20.848+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : delete from Anime where nSerie=?
2025-02-11T16:14:20.850+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : select r1_0.id,r1_0.role from Role r1_0
2025-02-11T16:14:20.852+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : delete from Role where id=?
2025-02-11T16:14:20.855+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : insert into Role (role,id) values (?,default)
2025-02-11T16:14:20.859+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : insert into Client (active,age,date_adhesion,date_naissance,email,nom,password,prenom,roleId,sexe,nAdherent) values (?,?,?,?,?,?,?,?,?,?,default)
2025-02-11T16:14:20.863+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : insert into Anime (date,nSerieM,nom,nomStudio,nSerie) values (?,?,?,?,default)
2025-02-11T16:14:20.868+01:00  INFO 43230 --- [librairie-online] [main] c.e.l.service.NoteAService               : Création d'une nouvelle note: com.example.librairie_online.entity.NoteA@7f6a0c29
2025-02-11T16:14:20.868+01:00  INFO 43230 --- [librairie-online] [main] c.e.l.service.AnimeService               : Recherche d'un anime avec l'ID: 4
2025-02-11T16:14:20.871+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : select a1_0.nSerie,a1_0.date,m1_0.nserie,m1_0.date_parution,f1_0.nom,f1_0.ville,m2_0.nom,m2_0.prenom,m2_0.nationalite,m2_0.sexe,m1_0.nbExemplaire,m1_0.nom,m1_0.tome,a1_0.nom,s1_0.nom,s1_0.nomDirecteur,s1_0.pays,s1_0.prenomDirecteur from Anime a1_0 left join Manga m1_0 on m1_0.nserie=a1_0.nSerieM left join Fournisseur f1_0 on f1_0.nom=m1_0.nomFournisseur left join Mangaka m2_0 on m2_0.nom=m1_0.nomMangaka and m2_0.prenom=m1_0.prenomMangaka left join Studio s1_0 on s1_0.nom=a1_0.nomStudio where a1_0.nSerie=?
2025-02-11T16:14:20.875+01:00  INFO 43230 --- [librairie-online] [main] c.e.l.service.AnimeService               : Anime trouvé: com.example.librairie_online.entity.Anime@210e7a5
2025-02-11T16:14:20.876+01:00  INFO 43230 --- [librairie-online] [main] c.e.l.service.ClientService              : Recherche d'un client avec l'ID: 4
2025-02-11T16:14:20.877+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : select c1_0.nAdherent,c1_0.active,c1_0.age,c1_0.date_adhesion,c1_0.date_naissance,c1_0.email,c1_0.nom,c1_0.password,c1_0.prenom,r1_0.id,r1_0.role,c1_0.sexe from Client c1_0 left join Role r1_0 on r1_0.id=c1_0.roleId where c1_0.nAdherent=?
2025-02-11T16:14:20.879+01:00  INFO 43230 --- [librairie-online] [main] c.e.l.service.ClientService              : Client trouvé: com.example.librairie_online.entity.Client@6dd01bfb
2025-02-11T16:14:20.881+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : select na1_0.nSerie,na1_0.nadherent,a1_0.nSerie,a1_0.date,m1_0.nserie,m1_0.date_parution,f1_0.nom,f1_0.ville,m2_0.nom,m2_0.prenom,m2_0.nationalite,m2_0.sexe,m1_0.nbExemplaire,m1_0.nom,m1_0.tome,a1_0.nom,s1_0.nom,s1_0.nomDirecteur,s1_0.pays,s1_0.prenomDirecteur,c1_0.nAdherent,c1_0.active,c1_0.age,c1_0.date_adhesion,c1_0.date_naissance,c1_0.email,c1_0.nom,c1_0.password,c1_0.prenom,r1_0.id,r1_0.role,c1_0.sexe,na1_0.date,na1_0.valeur from NoteA na1_0 left join Anime a1_0 on a1_0.nSerie=na1_0.nSerie left join Manga m1_0 on m1_0.nserie=a1_0.nSerieM left join Fournisseur f1_0 on f1_0.nom=m1_0.nomFournisseur left join Mangaka m2_0 on m2_0.nom=m1_0.nomMangaka and m2_0.prenom=m1_0.prenomMangaka left join Studio s1_0 on s1_0.nom=a1_0.nomStudio left join Client c1_0 on c1_0.nAdherent=na1_0.nadherent left join Role r1_0 on r1_0.id=c1_0.roleId where (na1_0.nSerie,na1_0.nadherent) in ((?,?))
2025-02-11T16:14:20.884+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : insert into NoteA (date,valeur,nSerie,nadherent) values (?,?,?,?)
2025-02-11T16:14:20.887+01:00  INFO 43230 --- [librairie-online] [main] c.e.l.service.NoteAService               : Note enregistrée avec succès: com.example.librairie_online.entity.NoteA@38485cee
2025-02-11T16:14:20.893+01:00 DEBUG 43230 --- [librairie-online] [main] org.hibernate.SQL                        : select count(*) from NoteA na1_0
2025-02-11T16:14:20.977+01:00  INFO 43230 --- [librairie-online] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-02-11T16:14:20.978+01:00 DEBUG 43230 --- [librairie-online] [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists Achete cascade 
2025-02-11T16:14:20.981+01:00 DEBUG 43230 --- [librairie-online] [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists Anime cascade 
2025-02-11T16:14:20.983+01:00 DEBUG 43230 --- [librairie-online] [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists Classe cascade 
2025-02-11T16:14:20.987+01:00 DEBUG 43230 --- [librairie-online] [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists Client cascade 
2025-02-11T16:14:20.990+01:00 DEBUG 43230 --- [librairie-online] [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists Directeur cascade 
2025-02-11T16:14:20.992+01:00 DEBUG 43230 --- [librairie-online] [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists Fournisseur cascade 
2025-02-11T16:14:20.993+01:00 DEBUG 43230 --- [librairie-online] [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists Genre cascade 
2025-02-11T16:14:20.994+01:00 DEBUG 43230 --- [librairie-online] [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists Jwt cascade 
2025-02-11T16:14:20.995+01:00 DEBUG 43230 --- [librairie-online] [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists Loue cascade 
2025-02-11T16:14:20.997+01:00 DEBUG 43230 --- [librairie-online] [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists Manga cascade 
2025-02-11T16:14:20.998+01:00 DEBUG 43230 --- [librairie-online] [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists Mangaka cascade 
2025-02-11T16:14:21.000+01:00 DEBUG 43230 --- [librairie-online] [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists NoteA cascade 
2025-02-11T16:14:21.001+01:00 DEBUG 43230 --- [librairie-online] [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists NoteM cascade 
2025-02-11T16:14:21.002+01:00 DEBUG 43230 --- [librairie-online] [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists Role cascade 
2025-02-11T16:14:21.004+01:00 DEBUG 43230 --- [librairie-online] [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists Studio cascade 
2025-02-11T16:14:21.005+01:00 DEBUG 43230 --- [librairie-online] [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists Validation cascade 
2025-02-11T16:14:21.008+01:00  INFO 43230 --- [librairie-online] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-02-11T16:14:21.010+01:00  INFO 43230 --- [librairie-online] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
